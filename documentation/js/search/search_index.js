var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.556,1,0.923]],["body/components/AppComponent.html",[0,0.832,1,1.134,2,1.015,3,0.52,4,0.225,5,0.72,6,0.72,7,0.72,8,0.72,9,0.263,10,1.556,11,3.502,12,1.295,13,2.472,14,1.423,15,1.621,16,0.72,17,2.048,18,2.11,19,2.548,20,1.144,21,3.075,22,1.144,23,2.472,24,0.631,25,0.552,26,3.075,27,4.068,28,3.821,29,3.075,30,3.821,31,1.277,32,2.847,33,2.472,34,2.847,35,2.009,36,1.835,37,2.472,38,2.009,39,1.477,40,1.393,41,1.819,42,2.472,43,1.483,44,1.556,45,3.075,46,1.816,47,5.39,48,3.502,49,2.047,50,1.662,51,0.047,52,1.991,53,2.472,54,1.341,55,3.221,56,1.556,57,3.502,58,2.472,59,1.393,60,1.225,61,0.789,62,1.237,63,1.556,64,1.705,65,2.472,66,2.472,67,4.425,68,3.502,69,3.106,70,3.466,71,2.009,72,2.415,73,2.009,74,1.556,75,2.472,76,2.472,77,2.472,78,2.021,79,1.703,80,1.556,81,2.472,82,1.556,83,2.472,84,1.705,85,3.502,86,2.431,87,2.472,88,1.556,89,4.068,90,2.009,91,2.009,92,1.513,93,1.477,94,1.556,95,2.472,96,4.068,97,2.472,98,1.612,99,2.472,100,1.277,101,1.917,102,2.472,103,2.472,104,1.556,105,1.838,106,2.472,107,1.705,108,0.816,109,2.472,110,1.556,111,2.009,112,2.472,113,2.472,114,2.472,115,1.556,116,2.5,117,2.472,118,2.472,119,2.431,120,2.415,121,1.556,122,2.472,123,2.472,124,2.472,125,2.472,126,2.472,127,1.225,128,0.72,129,1.556,130,0.816,131,0.395,132,0.93,133,0.816,134,0.816,135,1.477,136,0.639,137,1.265,138,1.556,139,2.472,140,2.5,141,1.265,142,1.556,143,1.265,144,1.073,145,0.93,146,1.556,147,1.556,148,1.556,149,1.097,150,3.597,151,2.415,152,3.075,153,1.073,154,1.556,155,2.5,156,2.009,157,1.556,158,1.556,159,1.556,160,3.502,161,3.502,162,1.556,163,1.556,164,0.263,165,0.447,166,1.556,167,2.472,168,1.556,169,4.425,170,1.556,171,0.93,172,1.265,173,1.556,174,1.556,175,1.556,176,1.556,177,2.472,178,1.556,179,2.472,180,1.073,181,0.639,182,0.639,183,1.556,184,1.477,185,1.705,186,2.5,187,0.504,188,2.093,189,1.073,190,1.556,191,2.472,192,1.477,193,1.556,194,0.883,195,1.556,196,1.556,197,1.556,198,0.93,199,0.93,200,1.556,201,1.295,202,1.556,203,1.556,204,1.556,205,1.556,206,2.009,207,1.556,208,1.073,209,1.556,210,1.556,211,1.073,212,1.265,213,1.144,214,1.265,215,1.265,216,0.72,217,0.901,218,1.144,219,0.72,220,1.621,221,0.72,222,0.72,223,0.504,224,0.72,225,0.504,226,0.72,227,0.504,228,0.72,229,0.504,230,0.72,231,0.72,232,0.72,233,0.013,234,0.02,235,0.013]],["title/modules/AppModule.html",[236,2.316,237,1.702]],["body/modules/AppModule.html",[1,1.798,3,0.512,4,0.438,9,0.512,51,0.047,84,2.089,92,1.671,127,1.625,131,0.769,137,2.462,164,0.512,165,0.87,180,2.777,223,1.671,225,1.671,227,1.671,229,1.671,233,0.024,234,0.032,235,0.024,237,3.413,238,1.587,239,2.406,240,2.462,241,2.462,242,2.462,243,2.462,244,2.705,245,2.777,246,2.089,247,3.029,248,4.027,249,3.273,250,4.027,251,4.027,252,3.273,253,2.089,254,3.273,255,3.029,256,3.029,257,4.524,258,2.462,259,3.029,260,3.029,261,4.027,262,2.462,263,2.462,264,2.089,265,2.462,266,4.027,267,3.029,268,4.027,269,3.029,270,4.027,271,3.029,272,4.027,273,3.029,274,2.462,275,3.029,276,3.029,277,2.089,278,2.089,279,2.462,280,3.029,281,3.029,282,3.029,283,3.029,284,3.029,285,3.029,286,3.029,287,3.029,288,3.029,289,3.029,290,3.029,291,3.029,292,3.029,293,3.029,294,3.029,295,3.029,296,2.462]],["title/modules/AppRoutingModule.html",[236,2.316,244,1.493]],["body/modules/AppRoutingModule.html",[3,0.712,4,0.609,9,0.712,51,0.047,127,1.423,131,1.07,164,0.712,165,1.21,233,0.034,234,0.04,235,0.034,238,2.208,244,2.596,249,3.425,254,4.026,297,4.214,298,4.214,299,3.628,300,4.953,301,3.425,302,2.518,303,4.214,304,4.214]],["title/injectables/ConnectionService.html",[128,1.319,305,1.702]],["body/injectables/ConnectionService.html",[3,0.298,4,0.394,9,0.46,19,1.99,24,0.214,25,0.608,31,0.993,40,1.214,41,1.918,43,1.562,46,1.118,49,0.723,50,1.823,51,0.048,52,2.174,54,1.547,59,1.629,60,1.283,61,0.832,62,1.447,78,1.663,79,1.214,100,1.562,119,1.627,120,2.584,127,1.325,128,1.26,131,0.447,136,0.723,144,1.214,145,1.052,149,1.361,151,2.296,164,0.298,165,0.506,171,1.99,181,1.663,182,1.367,187,1.534,189,1.214,194,1.076,208,2.296,217,0.642,233,0.014,234,0.022,235,0.014,302,2.892,305,1.627,306,1.214,307,1.76,308,2.989,309,3.33,310,3.33,311,3.33,312,2.723,313,2.723,314,2.723,315,3.046,316,3.046,317,3.747,318,2.723,319,2.723,320,3.046,321,3.046,322,2.723,323,2.723,324,2.723,325,2.723,326,3.747,327,3.747,328,1.367,329,2.022,330,4.357,331,1.76,332,3.747,333,2.419,334,2.723,335,1.76,336,2.723,337,1.76,338,1.76,339,1.76,340,1.76,341,1.759,342,2.723,343,1.366,344,1.964,345,1.495,346,2.245,347,1.76,348,2.723,349,1.76,350,1.76,351,1.76,352,2.723,353,1.76,354,2.723,355,2.56,356,1.76,357,2.723,358,3.33,359,2.723,360,2.723,361,2.213,362,2.723,363,2.723,364,2.723,365,2.723,366,1.76,367,4.737,368,1.76,369,1.76,370,1.431,371,0.882,372,0.642,373,2.213,374,1.76,375,1.76,376,1.76,377,1.214,378,1.76,379,1.052,380,1.431,381,1.76,382,3.747,383,1.76,384,1.76,385,1.76,386,1.76,387,1.76,388,1.214,389,1.76,390,1.76,391,1.76,392,1.76,393,1.76,394,1.431,395,1.76,396,1.76,397,3.33,398,3.33,399,2.707,400,1.76,401,3.33,402,1.745,403,3.33,404,3.33,405,3.33,406,2.707,407,3.33,408,1.76,409,1.76,410,1.76,411,1.76,412,1.76,413,1.76,414,2.723,415,1.76,416,1.76,417,1.76,418,1.431,419,1.76,420,1.431,421,1.431,422,1.214,423,1.431,424,1.214,425,1.431,426,0.923,427,0.923,428,0.923,429,1.26,430,1.427,431,1.118,432,1.26,433,2.723,434,1.76]],["title/interfaces/MapCollection.html",[435,1.039,436,1.493]],["body/interfaces/MapCollection.html",[3,0.647,4,0.553,9,0.647,24,0.466,25,1.044,51,0.046,54,1.549,61,0.79,78,1.919,79,1.705,149,1.099,164,0.888,187,1.239,194,1.099,233,0.031,234,0.038,235,0.031,328,2.072,329,1.571,341,1.571,343,1.395,344,2.006,345,1.635,346,2.006,371,1.703,372,1.395,426,2.006,427,2.006,428,2.006,429,1.771,431,2.213,432,1.771,435,1.917,436,2.911,437,2.006,438,2.287,439,2.826]],["title/components/MapComponent.html",[0,0.556,223,0.923]],["body/components/MapComponent.html",[0,0.783,1,0.78,2,1.411,3,0.407,4,0.348,5,1.115,6,1.115,7,1.115,8,1.115,9,0.407,12,1.262,14,1.592,15,1.115,16,1.115,17,2.343,18,2.343,20,1.592,22,1.592,24,0.293,25,0.768,31,1.254,39,2.055,40,0.878,41,1.878,43,1.254,46,0.989,49,1.974,50,1.462,51,0.047,52,1.974,54,1.328,59,1.254,60,1.256,61,0.813,62,1.114,64,1.661,72,2.765,92,0.78,93,2.055,98,1.262,100,1.254,101,2.192,105,2.055,108,1.262,120,1.661,127,1.381,128,2.226,130,1.262,131,0.612,133,1.262,144,1.661,145,1.439,149,0.692,164,0.407,165,0.692,181,1.795,182,0.989,184,1.439,187,0.78,192,1.439,194,0.692,199,1.439,213,1.115,216,1.115,217,1.254,218,1.592,219,1.115,220,2.024,221,1.115,222,1.115,223,1.416,224,1.115,225,0.78,226,1.115,227,0.78,228,1.115,229,1.114,230,1.115,231,1.115,232,1.115,233,0.019,234,0.028,235,0.019,245,2.765,264,1.661,265,1.958,308,2.396,333,1.802,341,0.989,345,1.299,355,2.396,370,1.958,371,1.114,372,0.878,402,1.262,431,1.411,440,2.409,441,2.765,442,4.01,443,3.438,444,3.259,445,3.259,446,4.373,447,3.016,448,2.055,449,2.055,450,2.396,451,1.661,452,3.438,453,2.409,454,2.765,455,2.409,456,2.396,457,2.409,458,2.409,459,2.409,460,2.409,461,2.795,462,2.409,463,1.958,464,1.439,465,1.958,466,1.439,467,1.958,468,1.661,469,1.958,470,2.409,471,1.439,472,1.439,473,2.409,474,2.409,475,1.661,476,2.409,477,3.438,478,2.409,479,1.958,480,1.661,481,2.409,482,1.661,483,1.661,484,1.439,485,1.661,486,1.958,487,1.958,488,2.795,489,1.958,490,1.661,491,5.341,492,4.809,493,2.409,494,1.661,495,2.409,496,1.661,497,2.409,498,1.661,499,2.409,500,1.661,501,2.409,502,2.409,503,2.795,504,2.371,505,1.661]],["title/components/MapDashboardComponent.html",[0,0.556,225,0.923]],["body/components/MapDashboardComponent.html",[0,0.595,1,0.497,2,1.004,3,0.259,4,0.222,5,0.711,6,0.711,7,0.711,8,0.711,9,0.413,12,0.804,14,1.132,15,1.411,16,0.711,17,2.038,18,2.038,20,1.132,22,1.132,24,0.187,25,0.546,31,0.892,32,2.477,34,2.477,36,1.821,39,1.461,40,0.56,41,2.022,43,1.813,46,1.558,49,2.041,50,1.789,51,0.047,52,2.198,54,1.09,55,1.059,59,1.111,60,1.09,61,0.829,62,0.987,86,0.917,92,0.497,93,1.461,98,0.804,100,1.813,101,0.63,105,0.917,107,1.059,108,1.281,119,0.917,127,1.303,128,2.038,130,0.804,131,0.39,132,0.917,133,1.281,134,0.804,135,1.461,136,0.63,149,0.441,150,1.248,155,2.825,164,0.259,165,0.441,181,0.63,182,1.251,185,1.686,186,1.248,188,1.821,192,0.917,194,0.441,198,2.416,199,2.077,201,0.804,206,1.248,211,1.059,213,0.711,216,0.711,217,0.892,218,1.132,219,0.711,220,1.609,221,0.711,222,0.711,223,1.126,224,0.711,225,1.126,226,0.711,227,0.497,228,0.711,229,0.497,230,0.711,231,0.711,232,0.711,233,0.012,234,0.02,235,0.012,274,4.517,296,1.988,302,2.416,315,2.825,316,2.825,320,2.825,330,2.825,343,0.56,345,0.987,355,1.821,371,0.497,372,0.56,377,1.059,379,0.917,399,1.248,402,1.281,406,1.248,418,1.248,420,1.248,421,1.248,422,1.059,423,1.248,424,1.059,425,1.248,448,1.461,449,1.461,450,1.821,451,1.059,456,2.534,464,0.917,466,0.917,468,1.059,471,0.917,472,0.917,475,1.059,482,1.059,483,1.059,484,0.917,485,1.686,506,3.832,507,1.535,508,2.445,509,3.047,510,2.445,511,4.043,512,4.043,513,4.043,514,4.043,515,4.043,516,4.043,517,4.043,518,4.043,519,4.043,520,4.043,521,4.043,522,3.047,523,2.477,524,3.795,525,3.047,526,3.047,527,3.287,528,3.475,529,2.445,530,3.475,531,3.475,532,3.475,533,3.475,534,3.475,535,3.047,536,3.047,537,2.617,538,2.445,539,1.535,540,1.535,541,1.535,542,1.535,543,1.535,544,1.535,545,1.535,546,2.445,547,1.535,548,1.248,549,1.535,550,1.535,551,1.535,552,1.535,553,1.535,554,1.535,555,1.535,556,1.535,557,1.535,558,1.535,559,1.535,560,1.535,561,1.535,562,1.535,563,1.535,564,1.535,565,1.535,566,1.535,567,1.535,568,1.535,569,2.445,570,1.535,571,2.445,572,1.535,573,1.535,574,1.535,575,1.535,576,1.535,577,1.059,578,1.535,579,1.535,580,1.535,581,1.535,582,1.535,583,1.535,584,1.535,585,1.535,586,1.535,587,2.445,588,1.535,589,1.535,590,1.535,591,1.535,592,1.535,593,1.535,594,1.535,595,2.445,596,1.535,597,1.535,598,1.535,599,1.535,600,1.535,601,1.535,602,1.535,603,1.535,604,1.535,605,1.535,606,1.535,607,1.988,608,1.248,609,1.535,610,3.475,611,1.059,612,1.248,613,1.248,614,1.535,615,1.248,616,1.248,617,1.686,618,1.248,619,1.248,620,1.988,621,1.535,622,1.535]],["title/interfaces/MapItem.html",[435,1.039,439,1.493]],["body/interfaces/MapItem.html",[3,0.647,4,0.553,9,0.647,24,0.466,25,1.044,51,0.046,54,1.622,61,0.79,78,2.213,79,1.966,149,1.099,164,0.888,187,1.239,194,1.099,233,0.031,234,0.038,235,0.031,328,2.072,329,1.571,341,1.571,343,1.395,344,2.006,345,1.635,346,2.006,371,1.239,372,1.395,426,2.006,427,2.006,428,2.006,429,1.771,431,1.919,432,1.771,435,1.917,436,2.755,437,2.006,438,2.287,439,2.755]],["title/components/MapItemComponent.html",[0,0.556,227,0.923]],["body/components/MapItemComponent.html",[0,0.508,1,0.395,2,0.833,3,0.206,4,0.176,5,0.565,6,0.565,7,0.565,8,0.565,9,0.206,12,0.64,14,0.939,15,1.205,16,0.565,17,1.866,18,1.866,19,1.556,20,0.939,22,0.939,24,0.247,25,0.453,31,0.74,36,1.589,40,0.949,41,1.975,43,1.711,46,1.58,49,1.771,50,1.651,51,0.048,52,2.119,54,1.043,59,0.445,60,0.748,61,0.833,62,0.395,70,2.116,78,1.382,79,0.949,92,0.395,98,0.64,100,1.711,101,1.245,105,2.011,107,0.842,108,1.063,127,0.748,130,0.64,131,0.31,132,0.729,133,1.589,134,0.64,135,0.729,136,0.501,140,0.992,141,0.992,149,0.871,153,0.842,156,0.992,164,0.206,165,0.351,181,0.501,182,1.382,184,1.812,185,1.399,187,0.395,188,3.119,192,1.556,194,0.351,198,3.333,199,1.212,201,1.063,208,0.842,211,2.091,212,0.992,213,0.565,214,0.992,216,0.565,217,0.74,218,0.939,219,0.565,220,1.404,221,0.565,222,0.565,223,0.395,224,0.565,225,0.395,226,0.565,227,0.982,228,0.565,229,0.395,230,0.565,231,0.565,232,0.565,233,0.01,234,0.016,235,0.01,258,4.414,328,1.491,329,1.069,333,2.32,343,0.949,355,2.011,361,2.116,371,0.982,379,0.729,388,2.091,394,1.649,402,1.764,429,1.205,430,0.64,432,1.205,441,1.795,444,2.116,447,2.091,448,1.212,449,1.212,450,1.556,456,2.845,461,1.649,464,1.212,466,0.729,471,0.729,479,0.992,480,0.842,482,2.779,483,2.321,484,0.729,486,0.992,487,0.992,488,2.116,489,0.992,504,1.399,506,3.745,607,0.992,608,2.116,611,1.399,613,1.649,615,2.116,616,2.116,617,2.091,618,0.992,619,0.992,620,0.992,623,1.22,624,2.603,625,2.029,626,3.632,627,3.632,628,3.632,629,3.632,630,3.632,631,2.603,632,3.033,633,2.465,634,3.033,635,3.033,636,3.033,637,2.465,638,3.033,639,3.033,640,3.033,641,2.029,642,2.116,643,2.116,644,2.603,645,2.603,646,2.603,647,2.116,648,2.116,649,2.603,650,2.029,651,1.22,652,1.22,653,1.22,654,1.22,655,1.22,656,1.22,657,2.603,658,3.366,659,1.22,660,1.22,661,1.22,662,1.22,663,1.22,664,1.22,665,1.22,666,1.22,667,1.22,668,1.22,669,1.22,670,1.22,671,1.22,672,1.22,673,1.22,674,1.22,675,1.22,676,1.22,677,1.22,678,1.22,679,2.029,680,1.22,681,1.22,682,1.22,683,1.22,684,1.22,685,1.22,686,1.22,687,2.029,688,1.22,689,1.22,690,1.22,691,1.22,692,1.22,693,1.22,694,1.22,695,0.992,696,0.992,697,1.22,698,1.22,699,0.992,700,1.22,701,1.22,702,1.22,703,1.22,704,2.029,705,2.029,706,2.029,707,1.22,708,1.22,709,1.22,710,1.22,711,1.22,712,2.029,713,1.22,714,1.22,715,1.22,716,2.029,717,2.029,718,0.992,719,0.992,720,1.22,721,2.029,722,1.22,723,3.366,724,2.029,725,2.029,726,2.029,727,2.603,728,4.183,729,2.603,730,2.029,731,3.033,732,5.416,733,2.029,734,2.029,735,2.029,736,2.029,737,2.029,738,2.029,739,2.029,740,2.029,741,2.029,742,2.029,743,2.029,744,2.029,745,2.029,746,2.029,747,2.029,748,2.029,749,2.029,750,2.029,751,2.029,752,1.22,753,1.22,754,1.22,755,1.22,756,2.029,757,2.603,758,1.22,759,1.22,760,1.22,761,1.22,762,1.22,763,4.527,764,1.22,765,1.22,766,2.029,767,1.22,768,1.22,769,1.22,770,1.22,771,1.22,772,1.22,773,2.029]],["title/interfaces/MapNode.html",[345,0.923,435,1.039]],["body/interfaces/MapNode.html",[3,0.577,4,0.493,9,0.577,24,0.415,25,0.972,51,0.047,54,1.614,61,0.936,62,1.634,78,2.14,79,1.901,149,1.376,164,0.853,187,1.552,194,1.449,233,0.027,234,0.035,235,0.027,328,2.273,329,2.071,341,1.4,343,1.747,344,2.645,345,1.776,346,2.645,371,1.105,372,1.244,426,1.788,427,1.788,428,1.788,429,2.336,431,2.14,432,2.336,435,1.84,436,2.645,437,1.788,438,2.039,439,2.511]],["title/components/MapNodeComponent.html",[0,0.556,229,0.923]],["body/components/MapNodeComponent.html",[0,0.521,1,0.41,2,0.858,3,0.214,4,0.183,5,0.585,6,0.585,7,0.585,8,0.585,9,0.214,12,0.663,14,0.967,15,1.236,16,0.585,17,1.893,18,1.893,20,0.967,22,0.967,24,0.45,25,0.467,31,0.762,35,1.698,36,1.625,39,1.249,40,0.461,41,1.972,43,1.426,46,1.605,49,1.839,50,1.844,51,0.048,52,2.244,54,1.521,55,2.138,59,1.774,60,1.428,61,0.899,62,1.576,64,0.872,71,1.698,72,3.156,73,2.52,79,1.546,86,1.249,92,0.41,93,1.249,98,1.399,100,1.426,101,0.858,116,2.17,119,1.853,127,0.986,128,1.711,131,0.321,136,0.519,149,1.218,151,0.872,164,0.214,165,0.363,171,0.756,172,1.698,181,1.096,182,0.519,187,1.482,194,0.363,201,1.625,213,0.585,216,0.585,217,0.762,218,0.967,219,0.585,220,1.435,221,0.585,222,0.585,223,0.41,224,0.585,225,0.41,226,0.585,227,0.41,228,0.585,229,1.004,230,0.585,231,0.585,232,0.585,233,0.01,234,0.017,235,0.01,264,3.741,302,2.61,308,2.871,321,2.52,328,0.858,329,0.858,333,2.143,343,0.762,345,1.556,371,0.677,372,0.461,379,0.756,388,0.872,430,1.095,431,1.273,441,1.841,445,2.17,447,2.138,448,1.249,449,1.249,450,1.595,451,0.872,456,2.677,463,2.17,464,0.756,465,2.17,466,0.756,467,2.52,468,0.872,469,1.028,471,0.756,472,0.756,475,1.441,484,1.595,485,2.697,503,2.52,504,2.138,505,1.441,506,3.741,611,2.138,612,1.698,633,1.698,637,1.698,642,2.17,643,2.17,647,1.028,648,2.17,695,1.028,696,1.028,699,1.028,718,2.17,719,1.698,774,1.265,775,2.67,776,2.089,777,2.67,778,3.1,779,3.1,780,2.089,781,3.1,782,2.089,783,3.1,784,2.089,785,2.089,786,2.089,787,2.089,788,2.089,789,2.089,790,2.089,791,2.089,792,2.089,793,2.67,794,2.67,795,2.67,796,2.089,797,1.265,798,1.265,799,1.265,800,1.265,801,1.265,802,1.265,803,1.265,804,2.089,805,1.265,806,2.089,807,1.265,808,1.265,809,2.089,810,1.265,811,1.265,812,1.265,813,2.089,814,1.265,815,1.265,816,1.265,817,1.265,818,2.089,819,1.265,820,2.089,821,1.265,822,2.089,823,1.265,824,2.089,825,1.265,826,2.089,827,1.265,828,2.089,829,1.265,830,2.089,831,1.265,832,2.089,833,1.265,834,1.265,835,2.089,836,1.265,837,1.265,838,1.265,839,1.265,840,1.265,841,3.1,842,3.1,843,3.1,844,1.265,845,1.265,846,1.028,847,1.265,848,1.265,849,1.265,850,3.432,851,2.089,852,1.265,853,2.089,854,3.432,855,2.089,856,2.089,857,1.265,858,1.265,859,2.089,860,1.265,861,1.265,862,1.265,863,1.265,864,1.265,865,1.265,866,1.265,867,1.265,868,1.265,869,1.265,870,1.265,871,1.265,872,1.265,873,2.67,874,1.265,875,3.432,876,1.265,877,2.67,878,2.089,879,1.265,880,1.265,881,2.089,882,1.265,883,1.265,884,1.265,885,3.432,886,1.265,887,2.089,888,2.089,889,2.089,890,2.089,891,1.265,892,1.265,893,1.265,894,1.265,895,1.265,896,1.265,897,1.265,898,1.265,899,2.089,900,1.265,901,2.089,902,1.265,903,3.1]],["title/injectables/PwaService.html",[305,1.702,537,1.965]],["body/injectables/PwaService.html",[3,0.64,4,0.548,9,0.64,19,2.264,24,0.461,25,1.038,31,1.694,40,1.382,41,1.833,50,1.382,51,0.047,59,1.382,60,1.088,61,0.785,62,1.227,86,2.777,127,1.335,131,0.962,164,0.64,165,1.088,171,2.264,233,0.031,234,0.037,235,0.031,277,2.613,278,2.613,305,2.777,306,2.613,380,3.08,472,2.264,537,3.205,904,3.789,905,5.026,906,5.24,907,3.789,908,5.472,909,4.647,910,3.789,911,3.789,912,3.789,913,3.789,914,3.789,915,3.789,916,3.789,917,3.789]],["title/components/QuokkerizeComponent.html",[0,0.556,92,0.923]],["body/components/QuokkerizeComponent.html",[0,0.888,1,0.994,2,1.667,3,0.518,4,0.443,5,1.42,6,1.42,7,1.42,8,1.42,9,0.518,14,1.88,15,2.107,16,1.42,17,2.483,18,2.483,20,1.88,22,1.88,24,0.373,25,0.907,31,1.481,36,2.539,38,3.939,40,1.66,41,1.838,43,1.119,49,1.869,50,1.481,51,0.047,52,1.667,60,1.166,61,0.518,90,2.494,91,2.494,92,1.569,100,1.119,101,1.989,108,1.608,127,1.308,130,1.608,131,0.779,136,1.259,153,2.116,164,0.518,165,0.881,181,1.667,182,1.667,184,2.427,188,1.833,198,1.833,201,2.128,213,2.107,216,1.42,217,1.481,218,1.88,219,1.42,220,2.243,221,1.42,222,1.42,223,0.994,224,1.42,225,0.994,226,1.42,227,0.994,228,1.42,229,0.994,230,1.42,231,1.42,232,1.42,233,0.025,234,0.033,235,0.025,308,2.72,402,2.128,430,2.128,480,2.116,523,3.701,617,2.116,846,2.494,918,3.068,919,4.552,920,4.061,921,4.552,922,4.552,923,4.061,924,3.068,925,3.068,926,4.061,927,3.068,928,3.068,929,3.068,930,3.068,931,4.061,932,4.061,933,4.061,934,3.068]],["title/interfaces/RootMapCollection.html",[341,1.169,435,1.039]],["body/interfaces/RootMapCollection.html",[3,0.638,4,0.546,9,0.638,24,0.459,25,1.035,51,0.047,54,1.543,61,0.848,78,1.903,79,1.69,149,1.084,164,0.884,187,1.222,194,1.084,233,0.03,234,0.037,235,0.03,328,2.059,329,1.549,341,1.903,343,1.376,344,1.978,345,1.625,346,1.978,371,1.222,372,1.376,426,2.742,427,2.742,428,2.742,429,1.747,431,1.903,432,1.747,435,1.908,436,2.931,437,1.978,438,2.255,439,2.815]],["title/dependencies.html",[239,2.044,935,2.391]],["body/dependencies.html",[51,0.047,131,0.981,132,2.31,133,2.026,134,2.465,135,2.31,136,1.587,143,3.142,145,2.31,189,2.666,217,1.409,233,0.031,234,0.038,235,0.031,239,2.31,252,3.824,253,3.244,262,3.142,263,3.142,277,2.666,278,2.666,301,3.142,373,3.142,936,5.658,937,3.865,938,4.704,939,3.865,940,3.865,941,3.865,942,3.865,943,3.865,944,3.865,945,3.865,946,3.865,947,3.865,948,3.865,949,3.865,950,3.865,951,3.865,952,3.865,953,3.865,954,3.865,955,3.865,956,3.865,957,3.865,958,3.865]],["title/miscellaneous/functions.html",[959,1.107,960,2.78]],["body/miscellaneous/functions.html",[24,0.535,51,0.043,59,1.603,60,1.538,62,1.424,233,0.035,234,0.041,235,0.035,377,3.502,422,3.033,424,3.033,959,2.036,960,3.575,961,4.397,962,4.397]],["title/index.html",[24,0.291,963,2.391,964,2.391]],["body/index.html",[0,0.972,4,0.537,46,1.525,51,0.037,60,1.067,69,3.732,111,3.02,180,2.562,233,0.03,234,0.037,235,0.03,246,2.562,505,3.589,548,3.02,965,3.716,966,4.591,967,3.716,968,4.982,969,4.982,970,3.716,971,3.716,972,3.716,973,4.591,974,5.347,975,5.52,976,3.716,977,3.716,978,3.716,979,3.716,980,3.716,981,3.716,982,3.716,983,3.716,984,3.716,985,4.982,986,4.982,987,3.716,988,5.347,989,3.716,990,3.716,991,3.716,992,3.716,993,3.716,994,3.716,995,3.02,996,4.591,997,5.204,998,3.716,999,4.591,1000,4.591,1001,3.716,1002,3.716,1003,3.716,1004,3.716,1005,4.982,1006,3.716,1007,3.716,1008,3.716,1009,2.562,1010,3.716,1011,3.716]],["title/modules.html",[238,2.025]],["body/modules.html",[51,0.041,134,2.331,233,0.036,234,0.041,235,0.036,237,2.658,238,2.331,244,2.331,253,3.068,1012,4.449,1013,5.111,1014,4.449,1015,4.449]],["title/overview.html",[1009,2.665]],["body/overview.html",[1,1.806,2,1.603,51,0.046,84,2.693,92,1.649,101,1.603,215,3.847,223,1.649,225,1.649,227,1.649,229,1.649,233,0.031,234,0.038,235,0.031,237,3.479,238,2.046,239,2.828,240,3.174,241,3.174,242,3.174,243,3.174,244,2.669,245,3.264,246,2.693,306,2.693,437,2.046,1009,2.693,1016,3.905,1017,3.905]],["title/routes.html",[299,2.665]],["body/routes.html",[51,0.042,233,0.037,234,0.042,235,0.037,299,3.133]],["title/miscellaneous/typealiases.html",[959,1.107,1018,3.42]],["body/miscellaneous/typealiases.html",[24,0.528,51,0.046,61,0.733,233,0.035,234,0.041,235,0.035,454,2.992,490,2.992,494,2.992,496,2.992,498,2.992,500,2.992,577,2.992,959,2.008,1019,4.338,1020,4.095,1021,3.526,1022,4.095]],["title/miscellaneous/variables.html",[959,1.107,1023,2.78]],["body/miscellaneous/variables.html",[24,0.494,43,1.889,51,0.047,61,0.875,100,1.889,233,0.033,234,0.039,235,0.033,279,4.361,333,2.129,430,2.129,454,2.801,490,2.801,494,2.801,496,2.801,498,2.801,500,2.801,527,3.94,577,2.801,959,1.88,995,3.94,1020,3.302,1021,3.302,1022,3.94,1023,3.302,1024,4.062,1025,4.062,1026,4.062,1027,4.846,1028,4.062]]],"invertedIndex":[["",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{},"interfaces/RootMapCollection.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{},"overview.html":{}}}],["0.1",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["0.10.2",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["0.4s",{"_index":769,"title":{},"body":{"components/MapItemComponent.html":{}}}],["0.5",{"_index":622,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["0.7",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/MapItemComponent.html":{}}}],["0.8",{"_index":754,"title":{},"body":{"components/MapItemComponent.html":{}}}],["0.8.0",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["0px",{"_index":760,"title":{},"body":{"components/MapItemComponent.html":{}}}],["1",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{},"components/MapNodeComponent.html":{}}}],["1.0",{"_index":771,"title":{},"body":{"components/MapItemComponent.html":{}}}],["1.2.32",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":862,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["100",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapNodeComponent.html":{}}}],["1000",{"_index":767,"title":{},"body":{"components/MapItemComponent.html":{}}}],["100px",{"_index":903,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["10px",{"_index":479,"title":{},"body":{"components/MapComponent.html":{},"components/MapItemComponent.html":{}}}],["11.0.0",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":971,"title":{},"body":{"index.html":{}}}],["11.2.13",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["130px",{"_index":756,"title":{},"body":{"components/MapItemComponent.html":{}}}],["150px",{"_index":609,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["180px",{"_index":722,"title":{},"body":{"components/MapItemComponent.html":{}}}],["19px",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["1em",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{}}}],["1px",{"_index":483,"title":{},"body":{"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["2",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["2.15.6",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":488,"title":{},"body":{"components/MapComponent.html":{},"components/MapItemComponent.html":{}}}],["24px",{"_index":730,"title":{},"body":{"components/MapItemComponent.html":{}}}],["30",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["303030",{"_index":406,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{}}}],["30px",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["32px",{"_index":614,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["36px",{"_index":723,"title":{},"body":{"components/MapItemComponent.html":{}}}],["3px",{"_index":726,"title":{},"body":{"components/MapItemComponent.html":{}}}],["4",{"_index":1017,"title":{},"body":{"overview.html":{}}}],["443px",{"_index":932,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["44px",{"_index":765,"title":{},"body":{"components/MapItemComponent.html":{}}}],["48px",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["4px",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{}}}],["5.15.1",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapItemComponent.html":{}}}],["510px",{"_index":933,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["54px",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["555",{"_index":727,"title":{},"body":{"components/MapItemComponent.html":{}}}],["5px",{"_index":757,"title":{},"body":{"components/MapItemComponent.html":{}}}],["6",{"_index":1016,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["64px",{"_index":610,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["70",{"_index":365,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["75vh",{"_index":606,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["7px",{"_index":773,"title":{},"body":{"components/MapItemComponent.html":{}}}],["8.3.1",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["80px",{"_index":478,"title":{},"body":{"components/MapComponent.html":{}}}],["8px",{"_index":608,"title":{},"body":{"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["95vh",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["_blank",{"_index":412,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["aaa",{"_index":766,"title":{},"body":{"components/MapItemComponent.html":{}}}],["actual_component",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["add",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["addchild",{"_index":780,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["addchild(id",{"_index":804,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["addednode",{"_index":644,"title":{},"body":{"components/MapItemComponent.html":{}}}],["addmap",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{}}}],["addnode",{"_index":632,"title":{},"body":{"components/MapItemComponent.html":{}}}],["afterviewchecked",{"_index":463,"title":{},"body":{"components/MapComponent.html":{},"components/MapNodeComponent.html":{}}}],["afterviewinit",{"_index":441,"title":{},"body":{"components/MapComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["aliases",{"_index":1019,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":616,"title":{},"body":{"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["anchors",{"_index":358,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["anchorspec",{"_index":367,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["angular",{"_index":968,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/service",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"injectables/PwaService.html":{},"dependencies.html":{}}}],["animate",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["animate('2000ms",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["animation",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["animations",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["app",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["app.component",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{},"overview.html":{}}}],["application",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["appmodule",{"_index":237,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":244,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["artifacts",{"_index":989,"title":{},"body":{"index.html":{}}}],["askusertoupdate",{"_index":906,"title":{},"body":{"injectables/PwaService.html":{}}}],["associated",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["audio",{"_index":921,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["auto",{"_index":481,"title":{},"body":{"components/MapComponent.html":{}}}],["automatically",{"_index":980,"title":{},"body":{"index.html":{}}}],["available",{"_index":1015,"title":{},"body":{"modules.html":{}}}],["awesome",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["background",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["backgroundcolor",{"_index":405,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["behaviorsubject",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/MapNodeComponent.html":{}}}],["behaviorsubject('stopped",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["bezier",{"_index":363,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["blob",{"_index":408,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["blob([jsondata",{"_index":420,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{}}}],["bloburl",{"_index":409,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["block",{"_index":759,"title":{},"body":{"components/MapItemComponent.html":{}}}],["boolean",{"_index":328,"title":{},"body":{"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"interfaces/RootMapCollection.html":{}}}],["bootstrap",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":482,"title":{},"body":{"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["bottom",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{}}}],["box",{"_index":724,"title":{},"body":{"components/MapItemComponent.html":{}}}],["browse",{"_index":1013,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["build",{"_index":988,"title":{},"body":{"index.html":{}}}],["c",{"_index":444,"title":{},"body":{"components/MapComponent.html":{},"components/MapItemComponent.html":{}}}],["cadetblue",{"_index":741,"title":{},"body":{"components/MapItemComponent.html":{}}}],["calc(100",{"_index":477,"title":{},"body":{"components/MapComponent.html":{}}}],["center",{"_index":343,"title":{},"body":{"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"interfaces/RootMapCollection.html":{}}}],["change",{"_index":982,"title":{},"body":{"index.html":{}}}],["changes",{"_index":815,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["changestate",{"_index":645,"title":{},"body":{"components/MapItemComponent.html":{}}}],["check",{"_index":1008,"title":{},"body":{"index.html":{}}}],["children",{"_index":431,"title":{},"body":{"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"interfaces/MapItem.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"interfaces/RootMapCollection.html":{}}}],["children.filter(n",{"_index":842,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["class",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{}}}],["cli",{"_index":969,"title":{},"body":{"index.html":{}}}],["close",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["closemap",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["closemap(tab",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["cluster_appmodule",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":983,"title":{},"body":{"index.html":{}}}],["color",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["column",{"_index":612,"title":{},"body":{"components/MapDashboardComponent.html":{},"components/MapNodeComponent.html":{}}}],["comes",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["command",{"_index":1010,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{},"index.html":{}}}],["component_template",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{},"overview.html":{}}}],["components/map",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["components/map/map.component",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["components/quokkerize/quokkerize.component",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["conn",{"_index":388,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["conn0",{"_index":733,"title":{},"body":{"components/MapItemComponent.html":{}}}],["conn1",{"_index":734,"title":{},"body":{"components/MapItemComponent.html":{}}}],["conn2",{"_index":736,"title":{},"body":{"components/MapItemComponent.html":{}}}],["conn3",{"_index":738,"title":{},"body":{"components/MapItemComponent.html":{}}}],["conn4",{"_index":740,"title":{},"body":{"components/MapItemComponent.html":{}}}],["conn5",{"_index":742,"title":{},"body":{"components/MapItemComponent.html":{}}}],["conn6",{"_index":744,"title":{},"body":{"components/MapItemComponent.html":{}}}],["conn7",{"_index":746,"title":{},"body":{"components/MapItemComponent.html":{}}}],["conn8",{"_index":748,"title":{},"body":{"components/MapItemComponent.html":{}}}],["conn9",{"_index":750,"title":{},"body":{"components/MapItemComponent.html":{}}}],["connect",{"_index":312,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["connect(sourceid",{"_index":325,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["connectionservice",{"_index":128,"title":{"injectables/ConnectionService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapNodeComponent.html":{}}}],["connector",{"_index":362,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["const",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{},"components/MapNodeComponent.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{}}}],["constructor(connectionservice",{"_index":451,"title":{},"body":{"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapNodeComponent.html":{}}}],["constructor(private",{"_index":472,"title":{},"body":{"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{}}}],["constructor(swupdate",{"_index":907,"title":{},"body":{"injectables/PwaService.html":{}}}],["container",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["containerelement",{"_index":397,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["containerelement.scrollheight",{"_index":404,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["containerelement.scrollwidth",{"_index":403,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["content",{"_index":504,"title":{},"body":{"components/MapComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["control",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["core",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["core/utils",{"_index":378,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["corresponding",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["crimson",{"_index":747,"title":{},"body":{"components/MapItemComponent.html":{}}}],["css",{"_index":329,"title":{},"body":{"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"interfaces/RootMapCollection.html":{}}}],["cssclass",{"_index":387,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["cssindex",{"_index":777,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["current",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["currenttab",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["cursor",{"_index":618,"title":{},"body":{"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["curviness",{"_index":364,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["dashboard",{"_index":508,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["dashboard.component",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard.component.html",{"_index":510,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":509,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts",{"_index":507,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:104",{"_index":543,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:108",{"_index":544,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:112",{"_index":553,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:116",{"_index":555,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:120",{"_index":550,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:124",{"_index":545,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:128",{"_index":549,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:33",{"_index":568,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:34",{"_index":567,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:35",{"_index":566,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:36",{"_index":561,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:37",{"_index":563,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:38",{"_index":564,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:39",{"_index":558,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:40",{"_index":565,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:41",{"_index":560,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:42",{"_index":562,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:43",{"_index":559,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:45",{"_index":573,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:47",{"_index":574,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:48",{"_index":575,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:50",{"_index":539,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:52",{"_index":542,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:53",{"_index":540,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:54",{"_index":541,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:56",{"_index":570,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:57",{"_index":538,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:59",{"_index":572,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:63",{"_index":551,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:67",{"_index":556,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:73",{"_index":557,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:79",{"_index":552,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:83",{"_index":547,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard.component.ts:97",{"_index":554,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["dashboard/map",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"components/MapDashboardComponent.html":{}}}],["dashed",{"_index":753,"title":{},"body":{"components/MapItemComponent.html":{}}}],["dataurl",{"_index":414,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["declarations",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["default",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{}}}],["delay",{"_index":929,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["deleteconnections",{"_index":446,"title":{},"body":{"components/MapComponent.html":{}}}],["deletednode",{"_index":876,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["deletenode",{"_index":633,"title":{},"body":{"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["deletenode(id",{"_index":806,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["dependencies",{"_index":239,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["detachable",{"_index":386,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["dev",{"_index":977,"title":{},"body":{"index.html":{}}}],["development",{"_index":972,"title":{},"body":{"index.html":{}}}],["direction",{"_index":611,"title":{},"body":{"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["directive",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["directives",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":987,"title":{},"body":{"index.html":{}}}],["directly",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["directory",{"_index":992,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":621,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["disconnect",{"_index":313,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["disconnect(sourceid",{"_index":334,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["disconnectall",{"_index":314,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["disconnectall(sourceid",{"_index":336,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["display",{"_index":484,"title":{},"body":{"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["dist",{"_index":991,"title":{},"body":{"index.html":{}}}],["div.item",{"_index":764,"title":{},"body":{"components/MapItemComponent.html":{}}}],["div.quokka",{"_index":931,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["dodgerblue",{"_index":731,"title":{},"body":{"components/MapItemComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["dot",{"_index":360,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["down",{"_index":719,"title":{},"body":{"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["downloaduri",{"_index":377,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{},"miscellaneous/functions.html":{}}}],["downloaduri(dataurl,'map.png",{"_index":415,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["downloaduri(dataurl,'map.svg",{"_index":417,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["downloaduri(uri",{"_index":424,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{},"miscellaneous/functions.html":{}}}],["dynamic",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1002,"title":{},"body":{"index.html":{}}}],["each",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["ease",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["edit",{"_index":657,"title":{},"body":{"components/MapItemComponent.html":{}}}],["editing",{"_index":752,"title":{},"body":{"components/MapItemComponent.html":{}}}],["element",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["element.css",{"_index":898,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["element.id",{"_index":896,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["element.position",{"_index":897,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["elementref",{"_index":355,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["emit",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["emitting",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["enabled",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":505,"title":{},"body":{"components/MapComponent.html":{},"components/MapNodeComponent.html":{},"index.html":{}}}],["endpoint",{"_index":359,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["environment",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["equokka",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["event",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{}}}],["event.direction",{"_index":886,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["eventemitter",{"_index":456,"title":{},"body":{"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["execute",{"_index":999,"title":{},"body":{"index.html":{}}}],["export",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{},"interfaces/RootMapCollection.html":{}}}],["exportaspng",{"_index":315,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{}}}],["exportassvg",{"_index":316,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{}}}],["exports",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["f.c",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["fa",{"_index":772,"title":{},"body":{"components/MapItemComponent.html":{}}}],["faarrowcircledown",{"_index":626,"title":{},"body":{"components/MapItemComponent.html":{}}}],["faarrowcircleup",{"_index":627,"title":{},"body":{"components/MapItemComponent.html":{}}}],["fabeziercurve",{"_index":511,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["facog",{"_index":512,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["faexchangealt",{"_index":628,"title":{},"body":{"components/MapItemComponent.html":{}}}],["fafilemedical",{"_index":513,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["fafolderopen",{"_index":514,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["fagift",{"_index":515,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["faimage",{"_index":516,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["faimages",{"_index":517,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["false",{"_index":333,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":486,"title":{},"body":{"components/MapComponent.html":{},"components/MapItemComponent.html":{}}}],["fapluscircle",{"_index":629,"title":{},"body":{"components/MapItemComponent.html":{}}}],["faprojectdiagram",{"_index":518,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["fasave",{"_index":519,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["fasearchminus",{"_index":520,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["fasearchplus",{"_index":521,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["fatrashalt",{"_index":630,"title":{},"body":{"components/MapItemComponent.html":{}}}],["fawindowclose",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["fc",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["fcmindmap",{"_index":965,"title":{},"body":{"index.html":{}}}],["ff9800",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["fi",{"_index":522,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{},"interfaces/RootMapCollection.html":{}}}],["filereader",{"_index":590,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["files",{"_index":548,"title":{},"body":{"components/MapDashboardComponent.html":{},"index.html":{}}}],["first",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["fit",{"_index":768,"title":{},"body":{"components/MapItemComponent.html":{}}}],["fixed",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{}}}],["flag",{"_index":994,"title":{},"body":{"index.html":{}}}],["flex",{"_index":485,"title":{},"body":{"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapNodeComponent.html":{}}}],["float",{"_index":770,"title":{},"body":{"components/MapItemComponent.html":{}}}],["font",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["fontawesome",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/angular",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"dependencies.html":{}}}],["function",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["functions",{"_index":960,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1004,"title":{},"body":{"index.html":{}}}],["generate",{"_index":985,"title":{},"body":{"index.html":{}}}],["generated",{"_index":967,"title":{},"body":{"index.html":{}}}],["getaquokka",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{}}}],["getnewmap",{"_index":317,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["getnewnode",{"_index":318,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["getnewnode(position",{"_index":342,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["getnewrootnode",{"_index":319,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["getnewrootnode(title",{"_index":348,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["getquokka",{"_index":528,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["getting",{"_index":963,"title":{"index.html":{}},"body":{}}],["go",{"_index":1007,"title":{},"body":{"index.html":{}}}],["gold",{"_index":749,"title":{},"body":{"components/MapItemComponent.html":{}}}],["goldenrod",{"_index":739,"title":{},"body":{"components/MapItemComponent.html":{}}}],["gotoedit",{"_index":634,"title":{},"body":{"components/MapItemComponent.html":{}}}],["gotoview",{"_index":635,"title":{},"body":{"components/MapItemComponent.html":{}}}],["graph",{"_index":1014,"title":{},"body":{"modules.html":{}}}],["green",{"_index":751,"title":{},"body":{"components/MapItemComponent.html":{}}}],["group",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["h1.title",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["handlefiles",{"_index":529,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["handlefiles(files",{"_index":546,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["height",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["help",{"_index":1005,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/MapItemComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["hidetoolbar",{"_index":636,"title":{},"body":{"components/MapItemComponent.html":{}}}],["hotpink",{"_index":735,"title":{},"body":{"components/MapItemComponent.html":{}}}],["hover",{"_index":620,"title":{},"body":{"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["html",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{},"dependencies.html":{}}}],["htmlelement",{"_index":401,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["http://localhost:4200",{"_index":979,"title":{},"body":{"index.html":{}}}],["i.id",{"_index":877,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["i.position",{"_index":855,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["icon",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["icons",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"dependencies.html":{}}}],["id",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"interfaces/RootMapCollection.html":{}}}],["id)[0",{"_index":878,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["idea",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["identifier",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["identify",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/MapNodeComponent.html":{}}}],["identify(index",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/MapNodeComponent.html":{}}}],["identifying",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["if(!!this.i",{"_index":704,"title":{},"body":{"components/MapItemComponent.html":{}}}],["if(this.inputchanged",{"_index":852,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["if(this.zoomindex",{"_index":586,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["image",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"dependencies.html":{}}}],["img",{"_index":934,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["import",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{}}}],["important",{"_index":728,"title":{},"body":{"components/MapItemComponent.html":{}}}],["imports",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{},"interfaces/RootMapCollection.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{},"interfaces/RootMapCollection.html":{}}}],["initialized",{"_index":646,"title":{},"body":{"components/MapItemComponent.html":{}}}],["initialtitle",{"_index":536,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["injectable",{"_index":305,"title":{"injectables/ConnectionService.html":{},"injectables/PwaService.html":{}},"body":{"injectables/ConnectionService.html":{},"injectables/PwaService.html":{}}}],["injectables",{"_index":306,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/PwaService.html":{},"overview.html":{}}}],["inline",{"_index":758,"title":{},"body":{"components/MapItemComponent.html":{}}}],["input",{"_index":464,"title":{},"body":{"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["input('css",{"_index":691,"title":{},"body":{"components/MapItemComponent.html":{}}}],["input('id",{"_index":689,"title":{},"body":{"components/MapItemComponent.html":{}}}],["input('initialtitle",{"_index":581,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["input('isfirst",{"_index":695,"title":{},"body":{"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["input('isfirstlevel",{"_index":693,"title":{},"body":{"components/MapItemComponent.html":{}}}],["input('islast",{"_index":696,"title":{},"body":{"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["input('isroot",{"_index":690,"title":{},"body":{"components/MapItemComponent.html":{}}}],["input('node",{"_index":469,"title":{},"body":{"components/MapComponent.html":{},"components/MapNodeComponent.html":{}}}],["input('state",{"_index":694,"title":{},"body":{"components/MapItemComponent.html":{}}}],["input('title",{"_index":692,"title":{},"body":{"components/MapItemComponent.html":{}}}],["input('zoom",{"_index":470,"title":{},"body":{"components/MapComponent.html":{}}}],["inputchanged",{"_index":445,"title":{},"body":{"components/MapComponent.html":{},"components/MapNodeComponent.html":{}}}],["inputs",{"_index":448,"title":{},"body":{"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["installpwa",{"_index":530,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["interface",{"_index":435,"title":{"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"interfaces/MapNode.html":{},"interfaces/RootMapCollection.html":{}},"body":{"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"interfaces/MapNode.html":{},"interfaces/RootMapCollection.html":{}}}],["interfaces",{"_index":437,"title":{},"body":{"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"interfaces/MapNode.html":{},"interfaces/RootMapCollection.html":{},"overview.html":{}}}],["invoke",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["isfirst",{"_index":642,"title":{},"body":{"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["isfirstlevel",{"_index":432,"title":{},"body":{"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"interfaces/RootMapCollection.html":{}}}],["islast",{"_index":643,"title":{},"body":{"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["isnew",{"_index":346,"title":{},"body":{"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"interfaces/MapNode.html":{},"interfaces/RootMapCollection.html":{}}}],["isroot",{"_index":429,"title":{},"body":{"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"interfaces/RootMapCollection.html":{}}}],["italic",{"_index":762,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item",{"_index":371,"title":{},"body":{"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"interfaces/RootMapCollection.html":{}}}],["item'},{'name",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["item.component",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.html",{"_index":625,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.scss",{"_index":624,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts",{"_index":623,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:101",{"_index":674,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:12",{"_index":652,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:13",{"_index":656,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:14",{"_index":651,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:16",{"_index":660,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:17",{"_index":654,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:18",{"_index":667,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:20",{"_index":659,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:22",{"_index":653,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:23",{"_index":655,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:25",{"_index":663,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:26",{"_index":661,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:27",{"_index":665,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:28",{"_index":662,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:29",{"_index":664,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:30",{"_index":666,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:32",{"_index":681,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:33",{"_index":688,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:35",{"_index":685,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:36",{"_index":686,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:37",{"_index":684,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:38",{"_index":683,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:39",{"_index":682,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:41",{"_index":650,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:45",{"_index":677,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:48",{"_index":676,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:57",{"_index":671,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:62",{"_index":670,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:72",{"_index":680,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:77",{"_index":678,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:81",{"_index":672,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:85",{"_index":668,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:89",{"_index":669,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:93",{"_index":673,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.component.ts:97",{"_index":675,"title":{},"body":{"components/MapItemComponent.html":{}}}],["item.ts",{"_index":438,"title":{},"body":{"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"interfaces/MapNode.html":{},"interfaces/RootMapCollection.html":{}}}],["item/map",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"components/MapItemComponent.html":{}}}],["json.parse(event.target.result",{"_index":596,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["json.stringify(map",{"_index":419,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["json.stringify(this.rootnode",{"_index":599,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["jsondata",{"_index":418,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{}}}],["jsplumb",{"_index":373,"title":{},"body":{"injectables/ConnectionService.html":{},"dependencies.html":{}}}],["jsplumb.getinstance",{"_index":357,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["jsplumbinstance",{"_index":309,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["justify",{"_index":503,"title":{},"body":{"components/MapComponent.html":{},"components/MapNodeComponent.html":{}}}],["karma",{"_index":1001,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["l\\'applicazione",{"_index":917,"title":{},"body":{"injectables/PwaService.html":{}}}],["left",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"interfaces/RootMapCollection.html":{}}}],["leftanchors",{"_index":310,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["leftchildren",{"_index":427,"title":{},"body":{"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"interfaces/MapNode.html":{},"interfaces/RootMapCollection.html":{}}}],["leftnodes",{"_index":778,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["leftnodes.length",{"_index":857,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["leftside",{"_index":327,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["legend",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["level",{"_index":578,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["level.ts",{"_index":1022,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":613,"title":{},"body":{"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["literal",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/MapNodeComponent.html":{}}}],["loaded",{"_index":922,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["map",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["map'},{'name",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["map.component.html",{"_index":443,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":442,"title":{},"body":{"components/MapComponent.html":{}}}],["map.json",{"_index":425,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{}}}],["map/map.component",{"_index":580,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["map:hover",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["mapcollection",{"_index":436,"title":{"interfaces/MapCollection.html":{}},"body":{"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"interfaces/MapNode.html":{},"interfaces/RootMapCollection.html":{}}}],["mapcomponent",{"_index":223,"title":{"components/MapComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{},"overview.html":{}}}],["mapdashboardcomponent",{"_index":225,"title":{"components/MapDashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{},"overview.html":{}}}],["mapitem",{"_index":439,"title":{"interfaces/MapItem.html":{}},"body":{"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"interfaces/MapNode.html":{},"interfaces/RootMapCollection.html":{}}}],["mapitemcomponent",{"_index":227,"title":{"components/MapItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{},"overview.html":{}}}],["mapnode",{"_index":345,"title":{"interfaces/MapNode.html":{}},"body":{"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"interfaces/RootMapCollection.html":{}}}],["mapnodecomponent",{"_index":229,"title":{"components/MapNodeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{},"overview.html":{}}}],["maps",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["margin",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["mat",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["matbuttonmodule",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{},"interfaces/RootMapCollection.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":720,"title":{},"body":{"components/MapItemComponent.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{}}}],["midnightblue",{"_index":745,"title":{},"body":{"components/MapItemComponent.html":{}}}],["min",{"_index":721,"title":{},"body":{"components/MapItemComponent.html":{}}}],["mind",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":959,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["models/map",{"_index":370,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapComponent.html":{}}}],["module",{"_index":236,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{}}],["modules",{"_index":238,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1006,"title":{},"body":{"index.html":{}}}],["movednode",{"_index":647,"title":{},"body":{"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["movenode",{"_index":637,"title":{},"body":{"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["movenode(id",{"_index":809,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["movenodedown",{"_index":638,"title":{},"body":{"components/MapItemComponent.html":{}}}],["movenodeup",{"_index":639,"title":{},"body":{"components/MapItemComponent.html":{}}}],["n.id).indexof(event.id",{"_index":884,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["n.position",{"_index":843,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":978,"title":{},"body":{"index.html":{}}}],["nbsp",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["new",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"index.html":{}}}],["newmap",{"_index":531,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["newnode",{"_index":864,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["newtitle",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["newtitle.srcelement.value",{"_index":710,"title":{},"body":{"components/MapItemComponent.html":{}}}],["ng",{"_index":975,"title":{},"body":{"index.html":{}}}],["ngafterviewchecked",{"_index":781,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["ngafterviewinit",{"_index":447,"title":{},"body":{"components/MapComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["ngmodule",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":782,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["ngonchanges(changes",{"_index":813,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["ngoninit",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["node",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapNodeComponent.html":{}}}],["node'},{'name",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["node.children.foreach(element",{"_index":899,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"components/MapComponent.html":{}}}],["node.component.html",{"_index":776,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.scss",{"_index":775,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts",{"_index":774,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:106",{"_index":827,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:122",{"_index":817,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:127",{"_index":829,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:131",{"_index":837,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:136",{"_index":834,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:14",{"_index":839,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:144",{"_index":808,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:148",{"_index":831,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:15",{"_index":840,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:155",{"_index":833,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:16",{"_index":838,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:17",{"_index":844,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:18",{"_index":845,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:20",{"_index":799,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:21",{"_index":797,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:22",{"_index":798,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:23",{"_index":800,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:24",{"_index":801,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:25",{"_index":802,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:26",{"_index":803,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:27",{"_index":796,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:31",{"_index":816,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:35",{"_index":812,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:39",{"_index":811,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:46",{"_index":814,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:50",{"_index":805,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:66",{"_index":807,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:70",{"_index":810,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:74",{"_index":836,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:78",{"_index":819,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:82",{"_index":821,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:87",{"_index":823,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.component.ts:98",{"_index":825,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.css",{"_index":874,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node.id",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/MapNodeComponent.html":{}}}],["node.position",{"_index":873,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["node/map",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"components/MapComponent.html":{},"components/MapNodeComponent.html":{}}}],["nodeadded",{"_index":793,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["nodedeleted",{"_index":648,"title":{},"body":{"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["nodemoved",{"_index":794,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["nodesorted",{"_index":795,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["none",{"_index":729,"title":{},"body":{"components/MapItemComponent.html":{}}}],["null",{"_index":330,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{}}}],["number",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapNodeComponent.html":{}}}],["obj",{"_index":595,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["object",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":928,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["offset",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["onchanges",{"_index":465,"title":{},"body":{"components/MapComponent.html":{},"components/MapNodeComponent.html":{}}}],["onchangestate",{"_index":783,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["oninitialized",{"_index":784,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["oninitialized(id",{"_index":818,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["onnodeadded",{"_index":785,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["onnodeadded(node",{"_index":820,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["onnodedeleted",{"_index":786,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["onnodedeleted(id",{"_index":822,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["onnodemoved",{"_index":787,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["onnodemoved(id",{"_index":824,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["onnodesorted",{"_index":788,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["onnodesorted(event",{"_index":826,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["onupdatetitle",{"_index":789,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["onupdatetitle(newtitle",{"_index":828,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["opacity",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["open",{"_index":532,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["optional",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":492,"title":{},"body":{"components/MapComponent.html":{}}}],["out",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":476,"title":{},"body":{"components/MapComponent.html":{}}}],["outline",{"_index":761,"title":{},"body":{"components/MapItemComponent.html":{}}}],["output",{"_index":466,"title":{},"body":{"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["output('addednode",{"_index":698,"title":{},"body":{"components/MapItemComponent.html":{}}}],["output('addmap",{"_index":582,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["output('changestate",{"_index":700,"title":{},"body":{"components/MapItemComponent.html":{}}}],["output('getaquokka",{"_index":583,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["output('initialized",{"_index":697,"title":{},"body":{"components/MapItemComponent.html":{}}}],["output('movednode",{"_index":701,"title":{},"body":{"components/MapItemComponent.html":{}}}],["output('nodeadded",{"_index":847,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["output('nodedeleted",{"_index":699,"title":{},"body":{"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["output('nodemoved",{"_index":848,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["output('nodesorted",{"_index":849,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["output('sortednode",{"_index":702,"title":{},"body":{"components/MapItemComponent.html":{}}}],["output('titlechange",{"_index":471,"title":{},"body":{"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["outputs",{"_index":449,"title":{},"body":{"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["overflow",{"_index":480,"title":{},"body":{"components/MapComponent.html":{},"components/MapItemComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["overview",{"_index":1009,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":935,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapItemComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["page",{"_index":1011,"title":{},"body":{"index.html":{}}}],["param",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["parameters",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":344,"title":{},"body":{"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"interfaces/MapNode.html":{},"interfaces/RootMapCollection.html":{}}}],["parent?.isroot",{"_index":434,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["play",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["pointer",{"_index":619,"title":{},"body":{"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["position",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"interfaces/RootMapCollection.html":{}}}],["preview",{"_index":320,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{}}}],["private",{"_index":308,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["prod",{"_index":993,"title":{},"body":{"index.html":{}}}],["production",{"_index":995,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":966,"title":{},"body":{"index.html":{}}}],["promptevent",{"_index":905,"title":{},"body":{"injectables/PwaService.html":{}}}],["properties",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{},"interfaces/RootMapCollection.html":{}}}],["protractor",{"_index":1003,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":380,"title":{},"body":{"injectables/ConnectionService.html":{},"injectables/PwaService.html":{}}}],["providers",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"components/MapDashboardComponent.html":{}}}],["public",{"_index":523,"title":{},"body":{"components/MapDashboardComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["purple",{"_index":743,"title":{},"body":{"components/MapItemComponent.html":{}}}],["pwa",{"_index":524,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["pwaservice",{"_index":537,"title":{"injectables/PwaService.html":{}},"body":{"components/MapDashboardComponent.html":{},"injectables/PwaService.html":{}}}],["quokka",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["quokkastate",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["quokkerize",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["quokkerize.component.html",{"_index":920,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["quokkerize.component.scss",{"_index":919,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["quokkerizecomponent",{"_index":92,"title":{"components/QuokkerizeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{},"overview.html":{}}}],["radius",{"_index":361,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapItemComponent.html":{}}}],["reader",{"_index":589,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["reader.onload",{"_index":592,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["reader.readastext(files.currenttarget.files[0",{"_index":591,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["receive",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["recursivedeletion",{"_index":790,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["recursivedeletion(node",{"_index":830,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["recursivemove",{"_index":791,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["recursivemove(node",{"_index":832,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["reference",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["refresh",{"_index":321,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapNodeComponent.html":{}}}],["register",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["registerwhenstable:30000",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["registrationstrategy",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["relative",{"_index":489,"title":{},"body":{"components/MapComponent.html":{},"components/MapItemComponent.html":{}}}],["reload",{"_index":981,"title":{},"body":{"index.html":{}}}],["remove",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["repeat",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["reset",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["resetquokka",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["resetquokka(event",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["result",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{},"interfaces/RootMapCollection.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{},"interfaces/RootMapCollection.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{}}}],["returns",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{}}}],["right",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"interfaces/RootMapCollection.html":{}}}],["rightanchors",{"_index":311,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["rightchildren",{"_index":428,"title":{},"body":{"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"interfaces/MapNode.html":{},"interfaces/RootMapCollection.html":{}}}],["rightnodes",{"_index":779,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["rightnodes.length",{"_index":858,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["roar",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["roar(event",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapItemComponent.html":{},"injectables/PwaService.html":{}}}],["root'},{'name",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["rootitem",{"_index":426,"title":{},"body":{"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"interfaces/MapNode.html":{},"interfaces/RootMapCollection.html":{}}}],["rootmapcollection",{"_index":341,"title":{"interfaces/RootMapCollection.html":{}},"body":{"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"interfaces/MapItem.html":{},"interfaces/MapNode.html":{},"interfaces/RootMapCollection.html":{}}}],["rootnode",{"_index":525,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["rootposition",{"_index":856,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["routermodule",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":299,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":974,"title":{},"body":{"index.html":{}}}],["running",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["rxjs",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":846,"title":{},"body":{"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["save",{"_index":533,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["savemap",{"_index":322,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["savemap(map",{"_index":352,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["scaffolding",{"_index":984,"title":{},"body":{"index.html":{}}}],["scale(0.1",{"_index":493,"title":{},"body":{"components/MapComponent.html":{}}}],["scale(0.2",{"_index":495,"title":{},"body":{"components/MapComponent.html":{}}}],["scale(0.4",{"_index":497,"title":{},"body":{"components/MapComponent.html":{}}}],["scale(0.5",{"_index":499,"title":{},"body":{"components/MapComponent.html":{}}}],["scale(0.75",{"_index":501,"title":{},"body":{"components/MapComponent.html":{}}}],["scale(1.0",{"_index":502,"title":{},"body":{"components/MapComponent.html":{}}}],["seconds",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["selected",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["selection",{"_index":763,"title":{},"body":{"components/MapItemComponent.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["self",{"_index":399,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{}}}],["self.rootnode",{"_index":597,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["serve",{"_index":976,"title":{},"body":{"index.html":{}}}],["server",{"_index":973,"title":{},"body":{"index.html":{}}}],["services/connection.service",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["serviceworker",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["setcontainer",{"_index":323,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["setcontainer(container",{"_index":354,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["shadow",{"_index":725,"title":{},"body":{"components/MapItemComponent.html":{}}}],["showtoolbar",{"_index":640,"title":{},"body":{"components/MapItemComponent.html":{}}}],["showtoolbarflag",{"_index":631,"title":{},"body":{"components/MapItemComponent.html":{}}}],["simplechanges",{"_index":467,"title":{},"body":{"components/MapComponent.html":{},"components/MapNodeComponent.html":{}}}],["size",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["solid",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"dependencies.html":{}}}],["soon",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["sortednode",{"_index":649,"title":{},"body":{"components/MapItemComponent.html":{}}}],["sortnode",{"_index":792,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["sortnode(event",{"_index":835,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["sound",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{},"interfaces/RootMapCollection.html":{},"index.html":{}}}],["sourceid",{"_index":332,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["span",{"_index":755,"title":{},"body":{"components/MapItemComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":961,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../zoom",{"_index":1021,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":297,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:103",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:110",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:118",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:126",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:135",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:46",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:51",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:57",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:62",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:67",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:76",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:83",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:93",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/map",{"_index":506,"title":{},"body":{"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["src/app/components/map/map.component.ts",{"_index":440,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/components/map/map.component.ts:15",{"_index":453,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/components/map/map.component.ts:16",{"_index":455,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/components/map/map.component.ts:17",{"_index":457,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/components/map/map.component.ts:18",{"_index":462,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/components/map/map.component.ts:20",{"_index":452,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/components/map/map.component.ts:24",{"_index":459,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/components/map/map.component.ts:28",{"_index":458,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/components/map/map.component.ts:32",{"_index":460,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/components/quokkerize/quokkerize.component.ts",{"_index":918,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["src/app/components/quokkerize/quokkerize.component.ts:12",{"_index":927,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["src/app/components/quokkerize/quokkerize.component.ts:13",{"_index":923,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["src/app/components/quokkerize/quokkerize.component.ts:18",{"_index":924,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["src/app/components/quokkerize/quokkerize.component.ts:22",{"_index":925,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["src/app/core/utils",{"_index":576,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["src/app/core/utils.ts",{"_index":962,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/models/map",{"_index":372,"title":{},"body":{"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"interfaces/RootMapCollection.html":{}}}],["src/app/models/zoom",{"_index":577,"title":{},"body":{"components/MapDashboardComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/connection.service",{"_index":468,"title":{},"body":{"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapNodeComponent.html":{}}}],["src/app/services/connection.service.ts",{"_index":307,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:106",{"_index":349,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:118",{"_index":347,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:15",{"_index":366,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:21",{"_index":369,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:22",{"_index":368,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:23",{"_index":324,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:30",{"_index":331,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:40",{"_index":335,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:44",{"_index":337,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:51",{"_index":351,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:55",{"_index":356,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:60",{"_index":350,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:70",{"_index":338,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:79",{"_index":339,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:88",{"_index":353,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/connection.service.ts:95",{"_index":340,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["src/app/services/pwa.service",{"_index":579,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["src/app/services/pwa.service.ts",{"_index":904,"title":{},"body":{"injectables/PwaService.html":{}}}],["src/app/services/pwa.service.ts:23",{"_index":910,"title":{},"body":{"injectables/PwaService.html":{}}}],["src/app/services/pwa.service.ts:9",{"_index":909,"title":{},"body":{"injectables/PwaService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stable",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapNodeComponent.html":{}}}],["started",{"_index":964,"title":{"index.html":{}},"body":{}}],["state",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/MapItemComponent.html":{}}}],["state('running",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["state('stopped",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["stop",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["stopped",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["stored",{"_index":990,"title":{},"body":{"index.html":{}}}],["string",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"interfaces/RootMapCollection.html":{}}}],["style",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/MapItemComponent.html":{}}}],["style({right",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["styleurls",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["support",{"_index":1012,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["swapindex",{"_index":885,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["swupdate",{"_index":908,"title":{},"body":{"injectables/PwaService.html":{}}}],["swupdate.available.subscribe(event",{"_index":911,"title":{},"body":{"injectables/PwaService.html":{}}}],["tab",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["tab.title",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["tabs",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["target",{"_index":385,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["targetid",{"_index":326,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["temp",{"_index":888,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["test",{"_index":998,"title":{},"body":{"index.html":{}}}],["tests",{"_index":997,"title":{},"body":{"index.html":{}}}],["text",{"_index":615,"title":{},"body":{"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["text/json",{"_index":421,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{}}}],["th",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["then(function",{"_index":407,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.addednode.emit(this.id",{"_index":713,"title":{},"body":{"components/MapItemComponent.html":{}}}],["this.addmap.emit",{"_index":603,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["this.askusertoupdate",{"_index":912,"title":{},"body":{"injectables/PwaService.html":{}}}],["this.changestate.emit('edit",{"_index":708,"title":{},"body":{"components/MapItemComponent.html":{}}}],["this.changestate.emit('view",{"_index":707,"title":{},"body":{"components/MapItemComponent.html":{}}}],["this.children$.asobservable().pipe(map(children",{"_index":841,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.children$.next(this.node.children",{"_index":850,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.connectionservice.connect",{"_index":894,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.connectionservice.connect(this.node.id",{"_index":872,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.connectionservice.disconnect(element.id",{"_index":901,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.connectionservice.disconnect(id",{"_index":881,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.connectionservice.disconnectall(this.node.id",{"_index":474,"title":{},"body":{"components/MapComponent.html":{}}}],["this.connectionservice.exportaspng",{"_index":600,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["this.connectionservice.exportassvg",{"_index":601,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["this.connectionservice.getnewnode(position",{"_index":865,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.connectionservice.getnewrootnode(this.initialtitle",{"_index":585,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["this.connectionservice.preview",{"_index":602,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["this.connectionservice.refresh",{"_index":875,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.connectionservice.setcontainer(this.c",{"_index":473,"title":{},"body":{"components/MapComponent.html":{}}}],["this.container",{"_index":396,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.cssindex",{"_index":861,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.currenttab",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["this.fi.nativeelement.click",{"_index":588,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["this.getaquokka.emit",{"_index":604,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["this.i.nativeelement.select",{"_index":705,"title":{},"body":{"components/MapItemComponent.html":{}}}],["this.id",{"_index":717,"title":{},"body":{"components/MapItemComponent.html":{}}}],["this.initialized.emit(this.id",{"_index":703,"title":{},"body":{"components/MapItemComponent.html":{}}}],["this.inputchanged",{"_index":853,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.jsplumbinstance.connect",{"_index":384,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.jsplumbinstance.getallconnections().foreach(conn",{"_index":392,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.jsplumbinstance.getcontainer",{"_index":398,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.jsplumbinstance.remove(conn.sourceid",{"_index":393,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.jsplumbinstance.remove(sourceid",{"_index":391,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.jsplumbinstance.repainteverything",{"_index":382,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.jsplumbinstance.setcontainer(container.nativeelement",{"_index":395,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.leftanchors",{"_index":389,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.map.deleteconnections",{"_index":594,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["this.movednode.emit(this.id",{"_index":715,"title":{},"body":{"components/MapItemComponent.html":{}}}],["this.node",{"_index":866,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.node.children",{"_index":880,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.node.children.filter(i",{"_index":854,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.node.children.foreach(element",{"_index":893,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.node.children.length",{"_index":887,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.node.children.map(n",{"_index":883,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.node.children.push(newnode",{"_index":867,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.node.children[index",{"_index":889,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.node.children[swapindex",{"_index":890,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.node.css",{"_index":863,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.node.id",{"_index":895,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.node.isnew",{"_index":891,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.node.isroot",{"_index":859,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.node.position",{"_index":860,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.node.title",{"_index":892,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.nodeadded.emit(this.node",{"_index":871,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.nodedeleted.emit(id",{"_index":868,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.nodedeleted.emit(this.id",{"_index":714,"title":{},"body":{"components/MapItemComponent.html":{}}}],["this.nodemoved.emit(id",{"_index":869,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.nodesorted.emit(event",{"_index":870,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.promptevent",{"_index":915,"title":{},"body":{"injectables/PwaService.html":{}}}],["this.pwa.promptevent.prompt",{"_index":605,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["this.quokka.roar",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["this.quokkastate$.next('running",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["this.quokkastate$.next('stopped",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["this.recursivedeletion(deletednode",{"_index":879,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.recursivedeletion(element",{"_index":900,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.recursivemove(element",{"_index":902,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.recursivemove(movednode",{"_index":882,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.refresh",{"_index":851,"title":{},"body":{"components/MapNodeComponent.html":{}}}],["this.rightanchors",{"_index":390,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["this.rootnode",{"_index":584,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["this.showtoolbarflag",{"_index":712,"title":{},"body":{"components/MapItemComponent.html":{}}}],["this.sortednode.emit({id",{"_index":716,"title":{},"body":{"components/MapItemComponent.html":{}}}],["this.state",{"_index":706,"title":{},"body":{"components/MapItemComponent.html":{}}}],["this.tabs.length",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tabs.push({title",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tabs.splice(index",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tabs[index].title",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["this.title",{"_index":709,"title":{},"body":{"components/MapItemComponent.html":{}}}],["this.titlechange.emit(newtitle",{"_index":475,"title":{},"body":{"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapNodeComponent.html":{}}}],["this.titlechange.emit(newtitle.srcelement.value",{"_index":711,"title":{},"body":{"components/MapItemComponent.html":{}}}],["this.titlechange.emit(obj.title",{"_index":598,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["this.zoomindex",{"_index":587,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["timer",{"_index":379,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["timer(0).subscribe",{"_index":593,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["timer(20).subscribe",{"_index":394,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapItemComponent.html":{}}}],["title",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"interfaces/RootMapCollection.html":{}}}],["titlechange",{"_index":450,"title":{},"body":{"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["titlechanged",{"_index":641,"title":{},"body":{"components/MapItemComponent.html":{}}}],["titlechanged(newtitle",{"_index":679,"title":{},"body":{"components/MapItemComponent.html":{}}}],["toblob",{"_index":375,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["toblob(containerelement",{"_index":400,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["todo",{"_index":930,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["toolbar",{"_index":607,"title":{},"body":{"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["top",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{}}}],["topng",{"_index":374,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["topng(containerelement",{"_index":413,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["tosvg",{"_index":376,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["tosvg(containerelement",{"_index":416,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["transform",{"_index":491,"title":{},"body":{"components/MapComponent.html":{}}}],["transition",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/MapItemComponent.html":{}}}],["transition('stopped",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["transparent",{"_index":617,"title":{},"body":{"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["trigger",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["trigger('runstate",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":430,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"interfaces/MapCollection.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"interfaces/MapItem.html":{},"components/MapItemComponent.html":{},"interfaces/MapNode.html":{},"components/MapNodeComponent.html":{},"injectables/PwaService.html":{},"components/QuokkerizeComponent.html":{},"interfaces/RootMapCollection.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1018,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/uuid",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":433,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["unique",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["uniquely",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["unit",{"_index":996,"title":{},"body":{"index.html":{}}}],["up",{"_index":718,"title":{},"body":{"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{}}}],["update",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["updatetitle",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapNodeComponent.html":{}}}],["updatetitle(newtitle",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapNodeComponent.html":{}}}],["uri",{"_index":422,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{},"miscellaneous/functions.html":{}}}],["url('/assets/quokka.png",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["url.createobjecturl(blob",{"_index":410,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["url.createobjecturl(file",{"_index":423,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapDashboardComponent.html":{}}}],["use",{"_index":986,"title":{},"body":{"index.html":{}}}],["used",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["uuid",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{}}}],["v4",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{}}}],["value",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["variables",{"_index":1023,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verdana",{"_index":487,"title":{},"body":{"components/MapComponent.html":{},"components/MapItemComponent.html":{}}}],["version",{"_index":970,"title":{},"body":{"index.html":{}}}],["via",{"_index":1000,"title":{},"body":{"index.html":{}}}],["view",{"_index":658,"title":{},"body":{"components/MapItemComponent.html":{}}}],["viewchild",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["viewchild('audio",{"_index":926,"title":{},"body":{"components/QuokkerizeComponent.html":{}}}],["viewchild('c",{"_index":461,"title":{},"body":{"components/MapComponent.html":{},"components/MapItemComponent.html":{}}}],["viewchild('fi",{"_index":569,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["viewchild('i",{"_index":687,"title":{},"body":{"components/MapItemComponent.html":{}}}],["viewchild('map",{"_index":571,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["viewchild('quokka",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["visibility",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["visible",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/MapItemComponent.html":{}}}],["void",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/MapNodeComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["whichever",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["white",{"_index":732,"title":{},"body":{"components/MapItemComponent.html":{}}}],["width",{"_index":402,"title":{},"body":{"injectables/ConnectionService.html":{},"components/MapComponent.html":{},"components/MapDashboardComponent.html":{},"components/MapItemComponent.html":{},"components/QuokkerizeComponent.html":{}}}],["window.addeventlistener('beforeinstallprompt",{"_index":914,"title":{},"body":{"injectables/PwaService.html":{}}}],["window.confirm('aggiornare",{"_index":916,"title":{},"body":{"injectables/PwaService.html":{}}}],["window.location.reload",{"_index":913,"title":{},"body":{"injectables/PwaService.html":{}}}],["window.onresize",{"_index":381,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["window.onscroll",{"_index":383,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["window.open(bloburl",{"_index":411,"title":{},"body":{"injectables/ConnectionService.html":{}}}],["worker",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"injectables/PwaService.html":{},"dependencies.html":{}}}],["worker.js",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["y",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["yellowgreen",{"_index":737,"title":{},"body":{"components/MapItemComponent.html":{}}}],["z",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/MapItemComponent.html":{}}}],["zone.js",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"components/MapComponent.html":{},"overview.html":{}}}],["zoom0_1",{"_index":490,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["zoom0_2",{"_index":494,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["zoom0_4",{"_index":496,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["zoom0_5",{"_index":498,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["zoom0_75",{"_index":500,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["zoom1_0",{"_index":454,"title":{},"body":{"components/MapComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["zoomin",{"_index":534,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["zoomindex",{"_index":526,"title":{},"body":{"components/MapDashboardComponent.html":{}}}],["zoomlevel",{"_index":1020,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["zoomlevels",{"_index":527,"title":{},"body":{"components/MapDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["zoomout",{"_index":535,"title":{},"body":{"components/MapDashboardComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main component of the application\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                fc-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentTab\n                            \n                            \n                                faWindowClose\n                            \n                            \n                                quokka\n                            \n                            \n                                quokkaState$\n                            \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMap\n                            \n                            \n                                closeMap\n                            \n                            \n                                getAQuokka\n                            \n                            \n                                identify\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetQuokka\n                            \n                            \n                                roar\n                            \n                            \n                                updateTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:67\n                            \n                        \n\n                \n                    \n                            Default constructor\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMap\n                        \n                    \n                \n            \n            \n                \naddMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:83\n                \n            \n\n\n            \n                \n                    Add a new tab with a new mind map\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeMap\n                        \n                    \n                \n            \n            \n                \ncloseMap(tab: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:135\n                \n            \n\n\n            \n                \n                    Remove a tab and the associated map\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tab\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the index of the tab to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAQuokka\n                        \n                    \n                \n            \n            \n                \ngetAQuokka()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:110\n                \n            \n\n\n            \n                \n                    Start th equokka animation emitting a 'running' state for the animation\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identify\n                        \n                    \n                \n            \n            \n                \nidentify(index: number, node: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:103\n                \n            \n\n\n            \n                \n                    A function for uniquely identifying a tab\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the index of the tab\n\n                                    \n                                \n                                \n                                    node\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the tab info (title and id)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the id of the tab\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetQuokka\n                        \n                    \n                \n            \n            \n                \nresetQuokka(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:118\n                \n            \n\n\n            \n                \n                    Stop and reset the animation emitting a 'stopped' state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roar\n                        \n                    \n                \n            \n            \n                \nroar(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:126\n                \n            \n\n\n            \n                \n                    Used to play a sound in the QuokkerizeComponent\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTitle\n                        \n                    \n                \n            \n            \n                \nupdateTitle(newTitle: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:93\n                \n            \n\n\n            \n                \n                    Receive a title update event from a map and update the title of the corresponding tab\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newTitle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new title of the root idea of the map\n\n                                    \n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the index of the tab to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:67\n                        \n                    \n\n            \n                \n                    Current selected tab\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faWindowClose\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faWindowClose\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:46\n                        \n                    \n\n            \n                \n                    Font Awesome Icon\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quokka\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QuokkerizeComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('quokka')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:51\n                        \n                    \n\n            \n                \n                    Reference to QuokkerizeComponent, used to directly invoke methods on the component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quokkaState$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new  BehaviorSubject('stopped')\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:57\n                        \n                    \n\n            \n                \n                    A BehaviorSubject which control the state of the QuokkerizeComponent animation.\nIt can emit 'stopped' or 'running'\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{title: 'The root 1', id: uuidv4()}]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:62\n                        \n                    \n\n            \n                \n                    An array of maps tabs. Each tab has a title and an id (used as unique identifier)\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ConnectionService } from './services/connection.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\nimport { BehaviorSubject } from 'rxjs';\nimport { QuokkerizeComponent } from './components/quokkerize/quokkerize.component';\nimport { animate, keyframes, state, style, transition, trigger } from '@angular/animations';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Main component of the application\n * \n * @implements {OnInit}\n */\n@Component({\n  selector: 'fc-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [\n    trigger('runState', [\n      state('stopped', style({\n        right: '0',\n        bottom: '-100%', \n        visibility: 'hidden'\n      })),\n      state('running', style({\n        right: '100%',\n        bottom: '-5%',\n        visibility: 'visible'\n      })),\n      transition('stopped => running', animate('2000ms ease-in', keyframes([\n        style({right: '0', bottom: '-100%', visibility: 'visible', offset: 0}),\n        style({right: '0', bottom: '0', offset: 0.1}),\n        style({right: '0', bottom: '-5%', offset: 0.2}),\n        style({right: '100%', bottom: '-5%', offset: 1})\n      ])))\n    ])\n  ]\n})\nexport class AppComponent implements OnInit {\n\n  //Icons\n\n  /**\n   * Font Awesome Icon\n   */\n  faWindowClose = faWindowClose;\n\n  /**\n   * Reference to QuokkerizeComponent, used to directly invoke methods on the component\n   */\n  @ViewChild('quokka') quokka!: QuokkerizeComponent; \n  \n  /**\n   * A BehaviorSubject which control the state of the QuokkerizeComponent animation. \n   * It can emit 'stopped' or 'running'\n   */\n  quokkaState$= new  BehaviorSubject('stopped');  \n\n  /**\n   * An array of maps tabs. Each tab has a title and an id (used as unique identifier)\n   */\n  tabs = [{title: 'The root 1', id: uuidv4()}];\n  \n  /**\n   * Current selected tab\n   */\n  currentTab = 0;\n\n  /**\n   * Default constructor   \n   */\n  constructor() {\n\n  }\n\n  ngOnInit(): void { \n    \n  }  \n  \n  /**\n   * Add a new tab with a new mind map\n   */\n  addMap(): void {\n    this.tabs.push({title: `The root ${this.tabs.length + 1}`, id: uuidv4()});\n    this.currentTab = this.tabs.length - 1;\n  }\n\n  /**\n   * Receive a title update event from a map and update the title of the corresponding tab\n   * @param newTitle the new title of the root idea of the map\n   * @param index the index of the tab to update\n   */\n  updateTitle(newTitle: string, index: number): void {\n    this.tabs[index].title = newTitle;\n  }\n\n  /**\n   * A function for uniquely identifying a tab\n   * @param index the index of the tab\n   * @param node the tab info (title and id)\n   * @returns the id of the tab\n   */\n  identify(index: number, node: {title: string, id: string}): string {\n    return node.id;\n  }\n\n  /**\n   * Start th equokka animation emitting a 'running' state for the animation\n   */\n  getAQuokka(): void {\n    this.quokkaState$.next('running');\n  }\n\n  /**\n   * Stop and reset the animation emitting a 'stopped' state\n   * @param event\n   */\n  resetQuokka(event: any){\n    this.quokkaState$.next('stopped');\n  }\n\n  /**\n   * Used to play a sound in the QuokkerizeComponent\n   * @param event\n   */\n  roar(event: any){\n    this.quokka.roar();\n  }\n\n  /**\n   * Remove a tab and the associated map\n   * @param tab \n   * @param index the index of the tab to remove\n   */\n  closeMap(tab: string, index: number): void {\n    this.tabs.splice(index, 1);\n  }\n}\n\n    \n\n    \n        \n            \n        F.C. Quokka Mind Map\n        \n    \n        \n            \n                &nbsp;\n                {{tab.title}}\n            \n                            \n                \n                        \n        \n        \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .app-container {\n    height: 95vh;\n    padding-top: 1em;\n    padding-left: 1em;\n\n    background-image: url('/assets/Quokka.png');\n    background-repeat: no-repeat;\n    background-size: 54px;    \n    background-position-y: 4px;\n\n    h1.title {\n        color: #ff9800;\n        font-size: 48px;\n        margin-top: 19px;        \n    }\n\n    mat-tab-group {\n        margin-right: 1em;\n    }\n\n    .btn-add-map {\n        position: fixed;\n        bottom: 30px;\n        right: 50%;\n    }\n\n    .close-map:hover {\n        opacity: 0.7;\n    }\n}\n\nfc-quokkerize {\n    position: fixed;\n    bottom: 0;\n    right: 0;\n    z-index: 2;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    F.C. Quokka Mind Map                                                                 {{tab.title}}                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'fc-root'},{'name': 'MapComponent', 'selector': 'fc-map'},{'name': 'MapDashboardComponent', 'selector': 'fc-map-dashboard'},{'name': 'MapItemComponent', 'selector': 'fc-map-item'},{'name': 'MapNodeComponent', 'selector': 'fc-map-node'},{'name': 'QuokkerizeComponent', 'selector': 'fc-quokkerize'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nMapDashboardComponent\n\nMapDashboardComponent\n\nAppModule -->\n\nMapDashboardComponent->AppModule\n\n\n\n\n\nMapItemComponent\n\nMapItemComponent\n\nAppModule -->\n\nMapItemComponent->AppModule\n\n\n\n\n\nMapNodeComponent\n\nMapNodeComponent\n\nAppModule -->\n\nMapNodeComponent->AppModule\n\n\n\n\n\nQuokkerizeComponent\n\nQuokkerizeComponent\n\nAppModule -->\n\nQuokkerizeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            MapComponent\n                        \n                        \n                            MapDashboardComponent\n                        \n                        \n                            MapItemComponent\n                        \n                        \n                            MapNodeComponent\n                        \n                        \n                            QuokkerizeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MapItemComponent } from './components/map-item/map-item.component';\nimport { MapComponent } from './components/map/map.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MapNodeComponent } from './components/map-node/map-node.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MapDashboardComponent } from './components/map-dashboard/map-dashboard.component';\nimport { QuokkerizeComponent } from './components/quokkerize/quokkerize.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment'; \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapItemComponent,   \n    MapComponent,\n    MapNodeComponent,\n    MapDashboardComponent,\n    QuokkerizeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FontAwesomeModule,\n    BrowserAnimationsModule,\n    MatTabsModule,\n    MatIconModule,\n    MatButtonModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConnectionService.html":{"url":"injectables/ConnectionService.html","title":"injectable - ConnectionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConnectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/connection.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                jsPlumbInstance\n                            \n                            \n                                    Private\n                                leftAnchors\n                            \n                            \n                                    Private\n                                rightAnchors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                disconnectAll\n                            \n                            \n                                exportAsPng\n                            \n                            \n                                exportAsSVG\n                            \n                            \n                                getNewMap\n                            \n                            \n                                getNewNode\n                            \n                            \n                                getNewRootNode\n                            \n                            \n                                preview\n                            \n                            \n                                refresh\n                            \n                            \n                                saveMap\n                            \n                            \n                                setContainer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/connection.service.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(sourceId: string, targetId: string, leftSide: boolean, css: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/connection.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    sourceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    targetId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    leftSide\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    css\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect(sourceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/connection.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAll\n                        \n                    \n                \n            \n            \n                \ndisconnectAll(sourceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/connection.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportAsPng\n                        \n                    \n                \n            \n            \n                \nexportAsPng()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/connection.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportAsSVG\n                        \n                    \n                \n            \n            \n                \nexportAsSVG()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/connection.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNewMap\n                        \n                    \n                \n            \n            \n                \ngetNewMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/connection.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         RootMapCollection\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNewNode\n                        \n                    \n                \n            \n            \n                \ngetNewNode(position: \"left\" | \"right\" | \"center\", parent: MapNode | null, css: string | null, isNew)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/connection.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            \"left\" | \"right\" | \"center\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                MapNode | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    css\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    isNew\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MapNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNewRootNode\n                        \n                    \n                \n            \n            \n                \ngetNewRootNode(title: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/connection.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MapNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preview\n                        \n                    \n                \n            \n            \n                \npreview()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/connection.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/connection.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveMap\n                        \n                    \n                \n            \n            \n                \nsaveMap(map: RootMapCollection)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/connection.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                RootMapCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setContainer\n                        \n                    \n                \n            \n            \n                \nsetContainer(container: ElementRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/connection.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/connection.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jsPlumbInstance\n                        \n                    \n                \n            \n                \n                    \n                        Default value : jsPlumb.getInstance({\n    Anchors: ['Right', 'Left'],\n    Endpoint: ['Dot', { radius: 1 }],\n    Connector: ['Bezier', {curviness: 70}]\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/services/connection.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        leftAnchors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [AnchorSpec, AnchorSpec]\n\n                    \n                \n                \n                    \n                        Default value : ['Left', 'Right',]\n                    \n                \n                    \n                        \n                                Defined in src/app/services/connection.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rightAnchors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [AnchorSpec, AnchorSpec]\n\n                    \n                \n                \n                    \n                        Default value : ['Right', 'Left']\n                    \n                \n                    \n                        \n                                Defined in src/app/services/connection.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { MapNode } from './../models/map-item';\nimport { RootMapCollection } from 'src/app/models/map-item';\nimport { Injectable, ElementRef } from '@angular/core';\nimport { AnchorSpec, jsPlumb } from 'jsplumb';\nimport { toPng, toBlob, toSvg } from 'html-to-image';\nimport { downloadURI } from '../core/utils';\nimport { v4 as uuidv4 } from 'uuid';\nimport { timer } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectionService {\n\n  private jsPlumbInstance = jsPlumb.getInstance({\n    Anchors: ['Right', 'Left'],\n    Endpoint: ['Dot', { radius: 1 }],\n    Connector: ['Bezier', {curviness: 70}]\n  });\n\n  private rightAnchors: [AnchorSpec, AnchorSpec] = ['Right', 'Left'];\n  private leftAnchors: [AnchorSpec, AnchorSpec]  = ['Left', 'Right',];\n  private container!: ElementRef;\n\n  constructor() { \n    window.onresize = () => this.jsPlumbInstance.repaintEverything();\n    window.onscroll = () => this.jsPlumbInstance.repaintEverything();\n  }\n\n  connect(sourceId: string, targetId: string, leftSide: boolean = false, css: string | null = null): void {\n    this.jsPlumbInstance.connect({\n      source: sourceId,\n      target: targetId,\n      detachable: false,\n      cssClass: !!css ? css : 'conn', \n      anchors: leftSide ?  this.leftAnchors : this.rightAnchors \n    }); \n  }\n\n  disconnect(sourceId: string): void {\n    this.jsPlumbInstance.remove(sourceId);\n  }\n\n  disconnectAll(sourceId: string): void {\n    this.jsPlumbInstance.getAllConnections().forEach(conn => {\n      this.jsPlumbInstance.remove(conn.sourceId);\n    }); \n    this.jsPlumbInstance.repaintEverything();\n  }\n\n  refresh(): void {\n    timer(20).subscribe(() => this.jsPlumbInstance.repaintEverything());\n  }\n\n  setContainer(container: ElementRef): void {\n    this.jsPlumbInstance.setContainer(container.nativeElement);\n    this.container = container;\n  }\n\n  preview(): void {\n    const containerElement =this.jsPlumbInstance.getContainer();    \n    const self = this;    \n    toBlob(containerElement as HTMLElement, {width: containerElement.scrollWidth + 100, height: containerElement.scrollHeight + 50, backgroundColor: '#303030'})\n      .then(function (blob) {\n        const blobUrl = URL.createObjectURL(blob);\n        window.open(blobUrl, '_blank');\n      });\n  }\n\n  exportAsPng(): void {\n    const containerElement =this.jsPlumbInstance.getContainer();\n    const self = this;\n    toPng(containerElement as HTMLElement, {width: containerElement.scrollWidth + 100, height: containerElement.scrollHeight + 50, backgroundColor: '#303030'})\n      .then(function (dataUrl) {\n        downloadURI(dataUrl,'map.png');\n      });\n  }\n\n  exportAsSVG(): void {\n    const containerElement =this.jsPlumbInstance.getContainer();\n    const self = this;\n    toSvg(containerElement as HTMLElement, {width: containerElement.scrollWidth + 100, height: containerElement.scrollHeight + 50, backgroundColor: '#303030'})\n      .then(function (dataUrl) {\n        downloadURI(dataUrl,'map.svg');\n      });\n  }\n\n  saveMap(map: RootMapCollection): void {\n    const jsonData = JSON.stringify(map);    \n    const file = new Blob([jsonData], {type: 'text/json'});\n    const uri = URL.createObjectURL(file);\n    downloadURI(uri, 'map.json');\n  }\n\n  getNewMap(): RootMapCollection {\n    return {\n      rootItem: {\n        id: uuidv4(),\n        title: 'The root'\n      },\n      leftChildren: [],\n      rightChildren: []\n    }\n  }\n\n  getNewRootNode(title: string | null = null): MapNode {\n    return {      \n      id: uuidv4(),\n      title: title || 'The root',\n      isRoot: true,\n      position: 'center' ,     \n      children:[] ,\n      isFirstLevel: false,\n      isNew: true     \n    }\n  }\n\n  getNewNode(position: 'left' | 'right' | 'center', parent: MapNode | null = null, css: string | null = null, isNew = false): MapNode {\n    return {      \n      id: uuidv4(),\n      title: 'New',\n      isRoot: false,\n      css: !!css ? css : undefined,\n      position: position,\n      parent: undefined,\n      children:[],\n      isFirstLevel: parent?.isRoot || false,\n      isNew: isNew\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapCollection.html":{"url":"interfaces/MapCollection.html","title":"interface - MapCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MapCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/map-item.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            item\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         MapCollection[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapCollection[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        item:         MapItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MapItem {\n    id: string;\n    title: string;\n}\n\nexport interface MapCollection {\n    item: MapItem;\n    children: MapCollection[];\n}\n\nexport interface RootMapCollection {\n    rootItem: MapItem;\n    leftChildren: MapCollection[];\n    rightChildren: MapCollection[];\n}\n\nexport interface MapNode {\n    id: string;\n    title: string;\n    isRoot: boolean;\n    css?: string;\n    parent?: MapNode;\n    children: MapNode[];\n    position: 'left' | 'right' | 'center';\n    isFirstLevel: boolean;\n    isNew: boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/map/map.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                fc-map\n            \n\n            \n                styleUrls\n                ./map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                c\n                            \n                            \n                                    Private\n                                inputChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteConnections\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                updateTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                node\n                            \n                            \n                                zoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                titleChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(connectionService: ConnectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/map/map.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connectionService\n                                                  \n                                                        \n                                                                        ConnectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        node\n                    \n                \n                \n                    \n                        Type :         MapNode\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map/map.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoom\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'zoom1_0'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map/map.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        titleChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map/map.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteConnections\n                        \n                    \n                \n            \n            \n                \ndeleteConnections()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map/map.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map/map.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTitle\n                        \n                    \n                \n            \n            \n                \nupdateTitle(newTitle: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map/map.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTitle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        c\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('c')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/map/map.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        inputChanged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map/map.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { MapNodeComponent } from './../map-node/map-node.component';\nimport { MapNode } from './../../models/map-item';\nimport { AfterViewChecked, AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { RootMapCollection } from 'src/app/models/map-item';\nimport { ConnectionService } from 'src/app/services/connection.service';\nimport { v4 as uuidv4 } from 'uuid';\n@Component({\n  selector: 'fc-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements AfterViewInit  {\n\n  \n  @Input('node') node!: MapNode;  \n  @Input('zoom') zoom: string = 'zoom1_0';\n  @Output('titleChange') titleChange = new EventEmitter(); \n  @ViewChild('c') c!: ElementRef; \n  \n  private inputChanged = false;  \n\n  constructor(private connectionService: ConnectionService) { }    \n\n  ngAfterViewInit(): void {\n    this.connectionService.setContainer(this.c);    \n  }  \n\n  deleteConnections(): void {\n    this.connectionService.disconnectAll(this.node.id);\n  }\n\n  updateTitle(newTitle: string): void {\n    this.titleChange.emit(newTitle);\n  }\n}\n\n    \n\n    \n        \n            \n        \n    \n\n    \n\n    \n                \n                    ./map.component.scss\n                \n                .outer-container {\n    width: calc(100% - 80px);\n    height: calc(100% - 10px);\n    overflow: auto;\n    border: solid 1px #ff9800;\n    \n    .main-container {\n        display: flex;   \n        font-family: 'Verdana'; \n        font-size: 20px;    \n        \n        position: relative;\n        padding: 20px;\n    \n        &.zoom0_1 {\n          transform-origin: 0 0;\n          transform: scale(0.1);\n        }\n        &.zoom0_2 {\n          transform-origin: 0 0;\n          transform: scale(0.2);\n        }    \n        &.zoom0_4 {\n          transform-origin: 0 0;\n          transform: scale(0.4);\n        }\n        &.zoom0_5 {\n          transform-origin: 0 0;\n          transform: scale(0.5);\n        }    \n        &.zoom0_75 {\n          transform-origin: 0 0;\n          transform: scale(0.75);\n        }\n        &.zoom1_0 {\n          transform-origin: 0 0;\n          transform: scale(1.0);\n        }\n        \n        .children-container-left {  \n            justify-content: end;\n        }\n          \n        .children-container-right {  \n            justify-content: start;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'fc-root'},{'name': 'MapComponent', 'selector': 'fc-map'},{'name': 'MapDashboardComponent', 'selector': 'fc-map-dashboard'},{'name': 'MapItemComponent', 'selector': 'fc-map-item'},{'name': 'MapNodeComponent', 'selector': 'fc-map-node'},{'name': 'QuokkerizeComponent', 'selector': 'fc-quokkerize'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapDashboardComponent.html":{"url":"components/MapDashboardComponent.html","title":"component - MapDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/map-dashboard/map-dashboard.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                ConnectionService\n                \n            \n\n\n            \n                selector\n                fc-map-dashboard\n            \n\n            \n                styleUrls\n                ./map-dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faBezierCurve\n                            \n                            \n                                faCog\n                            \n                            \n                                faFileMedical\n                            \n                            \n                                faFolderOpen\n                            \n                            \n                                faGift\n                            \n                            \n                                faImage\n                            \n                            \n                                faImages\n                            \n                            \n                                faProjectDiagram\n                            \n                            \n                                faSave\n                            \n                            \n                                faSearchMinus\n                            \n                            \n                                faSearchPlus\n                            \n                            \n                                fi\n                            \n                            \n                                map\n                            \n                            \n                                    Public\n                                pwa\n                            \n                            \n                                rootNode\n                            \n                            \n                                zoomIndex\n                            \n                            \n                                zoomLevels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exportAsPNG\n                            \n                            \n                                exportAsSVG\n                            \n                            \n                                getQuokka\n                            \n                            \n                                handleFiles\n                            \n                            \n                                installPwa\n                            \n                            \n                                newMap\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                            \n                                preview\n                            \n                            \n                                save\n                            \n                            \n                                updateTitle\n                            \n                            \n                                zoomIn\n                            \n                            \n                                zoomOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                initialTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addMap\n                            \n                            \n                                getAQuokka\n                            \n                            \n                                titleChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(connectionService: ConnectionService, pwa: PwaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connectionService\n                                                  \n                                                        \n                                                                        ConnectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pwa\n                                                  \n                                                        \n                                                                        PwaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        initialTitle\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:50\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addMap\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        getAQuokka\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:52\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exportAsPNG\n                        \n                    \n                \n            \n            \n                \nexportAsPNG()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportAsSVG\n                        \n                    \n                \n            \n            \n                \nexportAsSVG()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQuokka\n                        \n                    \n                \n            \n            \n                \ngetQuokka()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleFiles\n                        \n                    \n                \n            \n            \n                \nhandleFiles(files: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        installPwa\n                        \n                    \n                \n            \n            \n                \ninstallPwa()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newMap\n                        \n                    \n                \n            \n            \n                \nnewMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preview\n                        \n                    \n                \n            \n            \n                \npreview()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTitle\n                        \n                    \n                \n            \n            \n                \nupdateTitle(newTitle: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTitle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomIn\n                        \n                    \n                \n            \n            \n                \nzoomIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomOut\n                        \n                    \n                \n            \n            \n                \nzoomOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-dashboard/map-dashboard.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faBezierCurve\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faBezierCurve\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCog\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faFileMedical\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faFileMedical\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faFolderOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faFolderOpen\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faGift\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGift\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faImage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faImage\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faImages\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faImages\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faProjectDiagram\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faProjectDiagram\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faSave\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faSave\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faSearchMinus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faSearchMinus\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faSearchPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faSearchPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('fi')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MapComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('map')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pwa\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PwaService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rootNode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MapNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomLevels\n                        \n                    \n                \n            \n                \n                    \n                        Default value : zoomLevels\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-dashboard/map-dashboard.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { \n  faSearchPlus, \n  faSearchMinus, \n  faSave, \n  faFolderOpen, \n  faImage, \n  faImages, \n  faBezierCurve, \n  faProjectDiagram, \n  faFileMedical, \n  faGift, \n  faCog \n} from '@fortawesome/free-solid-svg-icons';\nimport { timer } from 'rxjs';\nimport { downloadURI } from 'src/app/core/utils';\nimport { MapNode } from 'src/app/models/map-item';\nimport { zoomLevels } from 'src/app/models/zoom-level';\nimport { ConnectionService } from 'src/app/services/connection.service';\nimport { PwaService } from 'src/app/services/pwa.service';\nimport { MapComponent } from '../map/map.component';\n\n@Component({\n  selector: 'fc-map-dashboard',\n  templateUrl: './map-dashboard.component.html',\n  styleUrls: ['./map-dashboard.component.scss'],\n  providers: [ConnectionService]\n})\nexport class MapDashboardComponent implements OnInit {\n\n  //Icons\n  \n  faSearchPlus = faSearchPlus;\n  faSearchMinus = faSearchMinus;\n  faSave = faSave;\n  faFolderOpen = faFolderOpen;\n  faImage = faImage;\n  faImages = faImages;\n  faBezierCurve = faBezierCurve;\n  faProjectDiagram = faProjectDiagram;  \n  faFileMedical = faFileMedical;\n  faGift = faGift;\n  faCog = faCog;\n\n  rootNode!: MapNode;\n\n  zoomIndex = 5;\n  zoomLevels = zoomLevels;\n\n  @Input('initialTitle') initialTitle: string | null = null;\n\n  @Output('titleChange') titleChange = new EventEmitter(); \n  @Output('addMap') addMap = new EventEmitter();\n  @Output('getAQuokka') getAQuokka = new EventEmitter(); \n\n  @ViewChild('fi') fi!: ElementRef;\n  @ViewChild('map') map!: MapComponent;\n\n  constructor(private connectionService: ConnectionService, public pwa: PwaService) {\n\n  }\n\n  ngOnInit(): void { \n    this.rootNode = this.connectionService.getNewRootNode(this.initialTitle);\n  }\n\n  zoomIn(): void {    \n    if(this.zoomIndex  0) {\n      this.zoomIndex = this.zoomIndex - 1;\n    }\n  }\n\n  open(): void {\n    this.fi.nativeElement.click();\n  }\n\n  handleFiles(files: any) {\n    const reader = new FileReader();\n    const self = this;\n    reader.readAsText(files.currentTarget.files[0]);\n    reader.onload = (event: any) => {      \n      timer(0).subscribe(() => {\n        this.map.deleteConnections();\n        const obj = JSON.parse(event.target.result);  \n        self.rootNode = obj;\n        this.titleChange.emit(obj.title);       \n      });\n    } \n  }  \n\n  save(): void {\n    const jsonData = JSON.stringify(this.rootNode);    \n    const file = new Blob([jsonData], {type: 'text/json'});\n    const uri = URL.createObjectURL(file);\n    downloadURI(uri, 'map.json');\n  }\n\n  exportAsPNG(): void {\n    this.connectionService.exportAsPng();\n  }\n\n  exportAsSVG(): void {\n    this.connectionService.exportAsSVG();\n  }\n\n  preview(): void {\n    this.connectionService.preview();\n  }\n\n  updateTitle(newTitle: string): void {\n    this.titleChange.emit(newTitle);\n  }\n\n  newMap(): void {\n    this.addMap.emit();\n  }\n\n  getQuokka(): void {\n    this.getAQuokka.emit();\n  }\n\n  installPwa(): void {\n    this.pwa.promptEvent.prompt();\n  }\n}\n\n    \n\n    \n        \n    \n\n  \n    \n        \n    \n    \n    \n        \n    \n\n    \n        \n    \n\n    \n        \n            \n\n    \n        \n    \n\n    \n        \n           \n\n    = 5}\">\n        \n    \n\n    \n        \n    \n\n    \n        \n    \n\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./map-dashboard.component.scss\n                \n                .map-container {\n    height: 75vh;\n    margin-top: 1em;\n}\n\n.main-toolbar {\n    position: fixed;\n    right: 8px;\n    top: 150px;      \n    width: 64px;\n    display: flex;\n    flex-direction: column;\n}\n\n.toolbar-icon {\n    width: 64px;\n    height: 64px;      \n    line-height: 64px;\n    font-size: 32px;\n    text-align: center;\n    border-bottom: solid 1px #ff9800;\n    color: #ff9800; \n    background-color: transparent;\n\n    cursor: pointer; \n    \n    &:hover {\n        color: #303030; \n        background-color: #ff9800;      \n    }\n\n    &.disabled {\n        opacity: 0.5;\n\n        &:hover {\n            color: #ff9800; \n            background-color: transparent;\n          }\n    }      \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                             = 5}\">                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'fc-root'},{'name': 'MapComponent', 'selector': 'fc-map'},{'name': 'MapDashboardComponent', 'selector': 'fc-map-dashboard'},{'name': 'MapItemComponent', 'selector': 'fc-map-item'},{'name': 'MapNodeComponent', 'selector': 'fc-map-node'},{'name': 'QuokkerizeComponent', 'selector': 'fc-quokkerize'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapItem.html":{"url":"interfaces/MapItem.html","title":"interface - MapItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MapItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/map-item.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MapItem {\n    id: string;\n    title: string;\n}\n\nexport interface MapCollection {\n    item: MapItem;\n    children: MapCollection[];\n}\n\nexport interface RootMapCollection {\n    rootItem: MapItem;\n    leftChildren: MapCollection[];\n    rightChildren: MapCollection[];\n}\n\nexport interface MapNode {\n    id: string;\n    title: string;\n    isRoot: boolean;\n    css?: string;\n    parent?: MapNode;\n    children: MapNode[];\n    position: 'left' | 'right' | 'center';\n    isFirstLevel: boolean;\n    isNew: boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapItemComponent.html":{"url":"components/MapItemComponent.html","title":"component - MapItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/map-item/map-item.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                fc-map-item\n            \n\n            \n                styleUrls\n                ./map-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                c\n                            \n                            \n                                faArrowCircleDown\n                            \n                            \n                                faArrowCircleUp\n                            \n                            \n                                faExchangeAlt\n                            \n                            \n                                faPlusCircle\n                            \n                            \n                                faTrashAlt\n                            \n                            \n                                i\n                            \n                            \n                                showToolbarFlag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNode\n                            \n                            \n                                deleteNode\n                            \n                            \n                                goToEdit\n                            \n                            \n                                goToView\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                moveNode\n                            \n                            \n                                moveNodeDown\n                            \n                            \n                                moveNodeUp\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showToolbar\n                            \n                            \n                                titleChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                css\n                            \n                            \n                                id\n                            \n                            \n                                isFirst\n                            \n                            \n                                isFirstLevel\n                            \n                            \n                                isLast\n                            \n                            \n                                isRoot\n                            \n                            \n                                state\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addedNode\n                            \n                            \n                                changeState\n                            \n                            \n                                initialized\n                            \n                            \n                                movedNode\n                            \n                            \n                                nodeDeleted\n                            \n                            \n                                sortedNode\n                            \n                            \n                                titleChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/map-item/map-item.component.ts:41\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        css\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'conn'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-item/map-item.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-item/map-item.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isFirst\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-item/map-item.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isFirstLevel\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-item/map-item.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLast\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-item/map-item.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRoot\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-item/map-item.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n                \n                    \n                        Type :     \"edit\" | \"view\"\n\n                    \n                \n                \n                    \n                        Default value : 'view'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-item/map-item.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-item/map-item.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addedNode\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-item/map-item.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        changeState\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-item/map-item.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialized\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-item/map-item.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        movedNode\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-item/map-item.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeDeleted\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-item/map-item.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sortedNode\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-item/map-item.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-item/map-item.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNode\n                        \n                    \n                \n            \n            \n                \naddNode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-item/map-item.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteNode\n                        \n                    \n                \n            \n            \n                \ndeleteNode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-item/map-item.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToEdit\n                        \n                    \n                \n            \n            \n                \ngoToEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-item/map-item.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToView\n                        \n                    \n                \n            \n            \n                \ngoToView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-item/map-item.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideToolbar\n                        \n                    \n                \n            \n            \n                \nhideToolbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-item/map-item.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveNode\n                        \n                    \n                \n            \n            \n                \nmoveNode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-item/map-item.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveNodeDown\n                        \n                    \n                \n            \n            \n                \nmoveNodeDown()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-item/map-item.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveNodeUp\n                        \n                    \n                \n            \n            \n                \nmoveNodeUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-item/map-item.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-item/map-item.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-item/map-item.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToolbar\n                        \n                    \n                \n            \n            \n                \nshowToolbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-item/map-item.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titleChanged\n                        \n                    \n                \n            \n            \n                \ntitleChanged(newtitle: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-item/map-item.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newtitle\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        c\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('c')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-item/map-item.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faArrowCircleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faArrowCircleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-item/map-item.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faArrowCircleUp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faArrowCircleUp\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-item/map-item.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faExchangeAlt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faExchangeAlt\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-item/map-item.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlusCircle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlusCircle\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-item/map-item.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faTrashAlt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faTrashAlt\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-item/map-item.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        i\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('i')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-item/map-item.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToolbarFlag\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-item/map-item.component.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { timer } from 'rxjs';\nimport { faPlusCircle, faTrashAlt, faExchangeAlt, faArrowCircleUp, faArrowCircleDown } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'fc-map-item',\n  templateUrl: './map-item.component.html',\n  styleUrls: ['./map-item.component.scss']\n})\nexport class MapItemComponent implements OnInit, AfterViewInit {\n    \n  @Input('id') id: string = '';\n  @Input('isRoot') isRoot: boolean = false;\n  @Input('css') css: string = 'conn';\n  \n  @Input('title') title: string = '';\n  @Input('isFirstLevel') isFirstLevel: boolean = false;    \n  @Output('titleChange') titleChange = new EventEmitter();\n\n  @Input('state') state: 'edit' | 'view' = 'view'; \n\n  @Input('isFirst') isFirst = false;\n  @Input('isLast') isLast = false;\n  \n  @Output('initialized') initialized = new EventEmitter();\n  @Output('addedNode') addedNode = new EventEmitter();\n  @Output('nodeDeleted') nodeDeleted = new EventEmitter();\n  @Output('changeState') changeState = new EventEmitter();\n  @Output('movedNode') movedNode = new EventEmitter();\n  @Output('sortedNode') sortedNode = new EventEmitter();\n  \n  @ViewChild('c') c!: ElementRef;\n  @ViewChild('i') i!: ElementRef; \n  \n  faPlusCircle = faPlusCircle;\n  faTrashAlt = faTrashAlt;\n  faExchangeAlt = faExchangeAlt;\n  faArrowCircleUp = faArrowCircleUp;\n  faArrowCircleDown = faArrowCircleDown;\n  \n  showToolbarFlag = false;\n\n  constructor() { }  \n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {    \n    this.initialized.emit(this.id);\n    timer(20).subscribe(() => {\n    if(!!this.i) {      \n      this.i.nativeElement.select();\n    }\n    });\n  }\n\n  goToView(): void {\n    this.state = 'view';\n    this.changeState.emit('view');\n  }\n\n  goToEdit(): void {\n    this.state = 'edit';    \n    timer(20).subscribe(() => {\n      this.changeState.emit('edit');\n      if(!!this.i) {\n        this.i.nativeElement.select();\n      }\n    });    \n  }\n\n  titleChanged(newtitle: any): void {\n    this.title = newtitle.srcElement.value;\n    this.titleChange.emit(newtitle.srcElement.value);\n  }\n\n  showToolbar(): void {\n    this.showToolbarFlag = true;\n  }\n\n  hideToolbar(): void {\n    this.showToolbarFlag = false;\n  }\n\n  addNode(): void {\n    this.addedNode.emit(this.id);\n  }\n\n  deleteNode(): void {\n    this.nodeDeleted.emit(this.id);\n  }\n\n  moveNode(): void {\n    this.movedNode.emit(this.id);\n  }\n\n  moveNodeUp(): void {\n    this.sortedNode.emit({id: this.id, direction: 'up'});\n  }\n\n  moveNodeDown(): void {\n    this.sortedNode.emit({id: this.id, direction: 'down'});\n  }\n}\n\n    \n\n    \n        \n    \n        {{title}}\n        \n    \n    \n                \n        \n        \n        \n        \n        \n\n    \n\n    \n                \n                    ./map-item.component.scss\n                \n                .item-main-container {\n    width: max-content;\n}\n\n.item {     \n    min-width: 180px; \n    height: 36px;\n    border-radius: 8px; \n    border: solid 1px transparent;      \n    box-shadow: 3px 3px 10px 1px #555; \n    overflow: hidden;  \n    text-align: center;  \n\n    &.root {\n        background-color: transparent !important;\n        color: #ff9800 !important;\n        // box-shadow: none !important;\n        // text-align: center !important;\n        font-size: 24px !important;\n        border: solid 1px #ff9800;\n        border-radius: 50%;\n        padding: 20px;\n    }\n    \n    &.conn {\n        background-color: DodgerBlue;\n        color: white; \n    }\n    &.conn0 {\n        background-color: DodgerBlue;\n        color: white; \n    }\n    &.conn1 {\n        background-color: hotpink;\n        color: white; \n    }\n    &.conn2 {\n        background-color: yellowgreen;\n        color: white; \n    }\n    &.conn3 {\n        background-color: goldenrod;\n        color: white; \n    }\n    &.conn4 {\n        background-color: cadetblue;\n        color: white; \n    }\n    &.conn5 {\n        background-color: purple;\n        color: white; \n    }\n    &.conn6 {\n        background-color: midnightblue;\n        color: white; \n    }\n    &.conn7 {\n        background-color: crimson;\n        color: white; \n    }\n    &.conn8 {\n        background-color: gold;\n        color: white; \n    }\n    &.conn9 {\n        background-color: green;\n        color: white; \n    }\n\n    &.editing {\n        border: dashed 1px white;\n        opacity: 0.8;\n    }\n    \n    span {\n        min-width: 130px;        \n        line-height: 36px;\n        height: 36px;\n        padding: 0 5px;        \n        display: inline-block;               \n    }\n    \n    input {\n        width: 130px;       \n        height: 36px;\n        line-height: 36px;\n        font-size: 20px;\n        border: none 0px transparent;\n        padding: 0 5px; \n        background-color: transparent;\n        outline: none;\n        font-family: \"Verdana\"; \n        font-style: italic; \n        text-align: center;        \n\n        &.root {            \n            color: #555 !important;\n            font-size: 24px !important; \n            \n            &::selection {\n                color: white !important;\n                background: #555 !important;\n            }\n        }\n\n        &.conn {            \n            color: white; \n\n            &::selection {\n                color: dodgerblue;\n                background: white;\n            }\n        }\n        &.conn0 {            \n            color: white;\n            \n            &::selection {\n                color: dodgerblue;\n                background: white;\n            }\n        }\n        &.conn1 {            \n            color: white;\n            \n            &::selection {\n                color: hotpink;\n                background: white;\n            }\n        }\n        &.conn2 {            \n            color: white;\n            \n            &::selection {\n                color: yellowgreen;\n                background: white;\n            }\n        }\n        &.conn3 {            \n            color: white;\n            \n            &::selection {\n                color: goldenrod;\n                background: white;\n            }\n        } \n        &.conn4 {            \n            color: white;\n            \n            &::selection {\n                color: cadetblue;\n                background: white;\n            }\n        }\n        &.conn5 {            \n            color: white;\n            \n            &::selection {\n                color: purple;\n                background: white;\n            }\n        }\n        &.conn6 {            \n            color: white;\n            \n            &::selection {\n                color: midnightblue;\n                background: white;\n            }\n        } \n        &.conn7 {            \n            color: white;\n            \n            &::selection {\n                color: crimson;\n                background: white;\n            }\n        } \n        &.conn8 {            \n            color: white;\n            \n            &::selection {\n                color: gold;\n                background: white;\n            }\n        }\n        &.conn9 {            \n            color: white;\n            \n            &::selection {\n                color: green;\n                background: white;\n            }\n        }     \n    }  \n}\n\ndiv.item-toolbar {\n    position: relative;\n    right: -44px;\n    top: -8px;\n    color: #AAA;\n    opacity: 0;\n    background-color: white;\n    z-index: 1000;\n    padding: 5px;\n    border: solid 1px #AAA;\n    border-radius: 8px;\n    width: fit-content;\n    transition: 0.4s;\n    float: right;\n\n    &.root {\n        right: 0;\n        top: -20px;\n    }\n\n    &.visible {\n        opacity: 1.0;\n    }\n\n    fa-icon {\n        margin-left: 7px;\n        margin-right: 7px;\n        cursor: pointer;        \n\n        &:hover {\n            opacity: 0.7;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{title}}                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'fc-root'},{'name': 'MapComponent', 'selector': 'fc-map'},{'name': 'MapDashboardComponent', 'selector': 'fc-map-dashboard'},{'name': 'MapItemComponent', 'selector': 'fc-map-item'},{'name': 'MapNodeComponent', 'selector': 'fc-map-node'},{'name': 'QuokkerizeComponent', 'selector': 'fc-quokkerize'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MapNode.html":{"url":"interfaces/MapNode.html","title":"interface - MapNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MapNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/map-item.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            css\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isFirstLevel\n                                        \n                                \n                                \n                                        \n                                            isNew\n                                        \n                                \n                                \n                                        \n                                            isRoot\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parent\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         MapNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapNode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        css\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        css:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFirstLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFirstLevel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNew\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNew:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRoot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isRoot:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:         MapNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapNode\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:     \"left\" | \"right\" | \"center\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\" | \"center\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MapItem {\n    id: string;\n    title: string;\n}\n\nexport interface MapCollection {\n    item: MapItem;\n    children: MapCollection[];\n}\n\nexport interface RootMapCollection {\n    rootItem: MapItem;\n    leftChildren: MapCollection[];\n    rightChildren: MapCollection[];\n}\n\nexport interface MapNode {\n    id: string;\n    title: string;\n    isRoot: boolean;\n    css?: string;\n    parent?: MapNode;\n    children: MapNode[];\n    position: 'left' | 'right' | 'center';\n    isFirstLevel: boolean;\n    isNew: boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapNodeComponent.html":{"url":"components/MapNodeComponent.html","title":"component - MapNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/map-node/map-node.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnChanges\n                    AfterViewChecked\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                fc-map-node\n            \n\n            \n                styleUrls\n                ./map-node.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map-node.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                children$\n                            \n                            \n                                    Private\n                                cssIndex\n                            \n                            \n                                    Private\n                                inputChanged\n                            \n                            \n                                leftNodes$\n                            \n                            \n                                rightNodes$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addChild\n                            \n                            \n                                deleteNode\n                            \n                            \n                                identify\n                            \n                            \n                                moveNode\n                            \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeState\n                            \n                            \n                                onInitialized\n                            \n                            \n                                onNodeAdded\n                            \n                            \n                                onNodeDeleted\n                            \n                            \n                                onNodeMoved\n                            \n                            \n                                onNodeSorted\n                            \n                            \n                                onUpdateTitle\n                            \n                            \n                                    Private\n                                recursiveDeletion\n                            \n                            \n                                    Private\n                                recursiveMove\n                            \n                            \n                                refresh\n                            \n                            \n                                sortNode\n                            \n                            \n                                updateTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                node\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nodeAdded\n                            \n                            \n                                nodeDeleted\n                            \n                            \n                                nodeMoved\n                            \n                            \n                                nodeSorted\n                            \n                            \n                                titleChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(connectionService: ConnectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/map-node/map-node.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connectionService\n                                                  \n                                                        \n                                                                        ConnectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isFirst\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-node/map-node.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLast\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-node/map-node.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        node\n                    \n                \n                \n                    \n                        Type :         MapNode\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-node/map-node.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        nodeAdded\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-node/map-node.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeDeleted\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-node/map-node.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeMoved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-node/map-node.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeSorted\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-node/map-node.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-node/map-node.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addChild\n                        \n                    \n                \n            \n            \n                \naddChild(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteNode\n                        \n                    \n                \n            \n            \n                \ndeleteNode(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identify\n                        \n                    \n                \n            \n            \n                \nidentify(index: number, node: MapNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    node\n                                    \n                                                MapNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveNode\n                        \n                    \n                \n            \n            \n                \nmoveNode(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewChecked\n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeState\n                        \n                    \n                \n            \n            \n                \nonChangeState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInitialized\n                        \n                    \n                \n            \n            \n                \nonInitialized(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNodeAdded\n                        \n                    \n                \n            \n            \n                \nonNodeAdded(node: MapNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                MapNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNodeDeleted\n                        \n                    \n                \n            \n            \n                \nonNodeDeleted(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNodeMoved\n                        \n                    \n                \n            \n            \n                \nonNodeMoved(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNodeSorted\n                        \n                    \n                \n            \n            \n                \nonNodeSorted(event: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpdateTitle\n                        \n                    \n                \n            \n            \n                \nonUpdateTitle(newTitle: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTitle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        recursiveDeletion\n                        \n                    \n                \n            \n            \n                \n                    \n                    recursiveDeletion(node: MapNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                MapNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        recursiveMove\n                        \n                    \n                \n            \n            \n                \n                    \n                    recursiveMove(node: MapNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                MapNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortNode\n                        \n                    \n                \n            \n            \n                \nsortNode(event: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTitle\n                        \n                    \n                \n            \n            \n                \nupdateTitle(newTitle: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-node/map-node.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTitle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        children$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-node/map-node.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cssIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-node/map-node.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        inputChanged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-node/map-node.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leftNodes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.children$.asObservable().pipe(map(children => children.filter(n => n.position === 'left')))\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-node/map-node.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rightNodes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.children$.asObservable().pipe(map(children => children.filter(n => n.position === 'right')))\n                    \n                \n                    \n                        \n                                Defined in src/app/components/map-node/map-node.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { BehaviorSubject, timer } from 'rxjs';\nimport { ConnectionService } from 'src/app/services/connection.service';\nimport { AfterViewChecked, AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { MapNode } from 'src/app/models/map-item';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'fc-map-node',\n  templateUrl: './map-node.component.html',\n  styleUrls: ['./map-node.component.scss']\n})\nexport class MapNodeComponent implements OnInit, AfterViewInit, OnChanges, AfterViewChecked {\n\n  private cssIndex = 0;\n  private inputChanged = false;  \n  private children$ = new BehaviorSubject([]);\n  leftNodes$ = this.children$.asObservable().pipe(map(children => children.filter(n => n.position === 'left')));\n  rightNodes$ = this.children$.asObservable().pipe(map(children => children.filter(n => n.position === 'right')));\n\n  @Input('node') node!: MapNode; \n  @Input('isFirst') isFirst = false;\n  @Input('isLast') isLast = false;\n  @Output('nodeAdded') nodeAdded = new EventEmitter();\n  @Output('nodeDeleted') nodeDeleted = new EventEmitter(); \n  @Output('nodeMoved') nodeMoved = new EventEmitter(); \n  @Output('nodeSorted') nodeSorted = new EventEmitter();\n  @Output('titleChange') titleChange = new EventEmitter(); \n  \n  constructor(private connectionService: ConnectionService) { }\n\n  ngOnInit(): void {\n    this.children$.next(this.node.children);\n  }\n\n  ngAfterViewInit(): void {\n    this.refresh();\n  }\n\n  ngAfterViewChecked(): void {\n    if(this.inputChanged) {\n      this.inputChanged = false;\n      this.refresh();      \n    } \n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.inputChanged = true;\n  }  \n\n  addChild(id: string): void {  \n    \n    const leftNodes = this.node.children.filter(i => i.position === 'left');\n    const rightNodes = this.node.children.filter(i => i.position === 'right');\n\n    const rootPosition = leftNodes.length >= rightNodes.length ? 'right' : 'left';\n\n    const position = this.node.isRoot ? rootPosition : this.node.position;\n    const css = this.node.isRoot ? 'conn' + (this.cssIndex++ % 10) : this.node.css;\n    \n    const newNode = this.connectionService.getNewNode(position, this.node, css, true);\n\n    this.node.children.push(newNode);\n    this.children$.next(this.node.children);\n  }\n\n  deleteNode(id: string): void {    \n    this.nodeDeleted.emit(id);\n  }\n\n  moveNode(id: string): void {    \n    this.nodeMoved.emit(id);\n  }\n\n  sortNode(event: {id: string, direction: 'up' | 'down'}): void {    \n    this.nodeSorted.emit(event);\n  }\n\n  onInitialized(id: string): void {\n    this.nodeAdded.emit(this.node);    \n  }\n\n  onNodeAdded(node: MapNode): void {        \n    this.connectionService.connect(this.node.id, node.id, node.position === 'left', node.css); \n    this.connectionService.refresh();\n  }\n  \n  onNodeDeleted(id: string): void {        \n    \n    const deletedNode = this.node.children.filter(i => i.id === id)[0];\n    this.recursiveDeletion(deletedNode);\n    \n    this.node.children = this.node.children.filter(i => i.id !== id) || []; \n    this.connectionService.disconnect(id);\n    this.connectionService.refresh();\n    this.children$.next(this.node.children);    \n  }\n\n  onNodeMoved(id: string): void {        \n    \n    const movedNode = this.node.children.filter(i => i.id === id)[0];\n    this.recursiveMove(movedNode);    \n    this.connectionService.disconnect(id);              \n    this.children$.next(this.node.children);    \n  }\n\n  onNodeSorted(event: {id: string, direction: 'up' | 'down'}): void { \n    const index = this.node.children.map(n => n.id).indexOf(event.id);\n    let swapIndex = event.direction === 'up' ? index - 1 : index + 1;\n    swapIndex = swapIndex  this.node.children.length - 1 ? this.node.children.length - 1 : swapIndex;\n\n    if (index !== swapIndex) {\n      const temp = this.node.children[index];\n      this.node.children[index] = this.node.children[swapIndex];\n      this.node.children[swapIndex] = temp;\n    }   \n    \n    this.connectionService.refresh();    \n    this.children$.next(this.node.children);    \n  }\n\n  onChangeState(): void {\n    this.node.isNew = false;\n    this.connectionService.refresh();\n  }\n\n  onUpdateTitle(newTitle: string): void {    \n    this.titleChange.emit(newTitle);    \n  }\n\n  updateTitle(newTitle: string): void {\n    this.node.title = newTitle;\n    this.titleChange.emit(newTitle);    \n  }\n\n  refresh(): void {  \n    this.node.children.forEach(element => {\n      this.connectionService.connect('' + this.node.id, element.id, element.position === 'left', element.css);      \n    });     \n\n    this.connectionService.refresh();\n  }  \n\n  identify(index: number, node: MapNode): string {\n    return node.id;\n  }\n\n  private recursiveDeletion(node: MapNode): void {\n    node.children.forEach(element => {\n      this.recursiveDeletion(element);\n      this.connectionService.disconnect(element.id);\n    });\n  }\n\n  private recursiveMove(node: MapNode): void {\n    node.position = node.position === 'left' ? 'right' : 'left';     \n    node.children.forEach(element => {\n      this.recursiveMove(element);\n      this.connectionService.disconnect(element.id);\n    });\n  }\n}\n\n    \n\n    \n        \n    \n    \n                  \n         \n    \n\n    \n         \n        \n    \n\n    \n        \n                \n    \n\n\n    \n\n    \n                \n                    ./map-node.component.scss\n                \n                .node-container {\n    display: flex;    \n\n    &.left {\n        justify-content: flex-end; \n    }\n\n    &.right {\n        justify-content: flex-start; \n    }    \n      \n    .children-container {\n        display: flex;\n        flex-direction: column;\n        height: 100%;  \n        justify-content: end;\n    }\n\n    .main-item-container {        \n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n\n        &.left {\n            margin-left: 100px;\n        }\n\n        &.right {            \n            margin-right: 100px;\n        }\n\n        &.center { \n            margin-left: 100px;           \n            margin-right: 100px;\n        }\n    }     \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'fc-root'},{'name': 'MapComponent', 'selector': 'fc-map'},{'name': 'MapDashboardComponent', 'selector': 'fc-map-dashboard'},{'name': 'MapItemComponent', 'selector': 'fc-map-item'},{'name': 'MapNodeComponent', 'selector': 'fc-map-node'},{'name': 'QuokkerizeComponent', 'selector': 'fc-quokkerize'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PwaService.html":{"url":"injectables/PwaService.html","title":"injectable - PwaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PwaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/pwa.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                promptEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                askUserToUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(swUpdate: SwUpdate)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/pwa.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        swUpdate\n                                                  \n                                                        \n                                                                        SwUpdate\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        askUserToUpdate\n                        \n                    \n                \n            \n            \n                \naskUserToUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/pwa.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        promptEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/pwa.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PwaService {\n\n  promptEvent : any; \n\n  constructor(private swUpdate: SwUpdate) {\n    swUpdate.available.subscribe(event => {\n      if (this.askUserToUpdate()) {\n        window.location.reload();\n      }\n    });\n\n    window.addEventListener('beforeinstallprompt', event => {\n      this.promptEvent = event;\n    });\n  }\n\n  askUserToUpdate() {\n    return window.confirm('Aggiornare l\\'applicazione?');\n  } \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuokkerizeComponent.html":{"url":"components/QuokkerizeComponent.html","title":"component - QuokkerizeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuokkerizeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/quokkerize/quokkerize.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                fc-quokkerize\n            \n\n            \n                styleUrls\n                ./quokkerize.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quokkerize.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                audio\n                            \n                            \n                                    Public\n                                loaded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                roar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/quokkerize/quokkerize.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quokkerize/quokkerize.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roar\n                        \n                    \n                \n            \n            \n                \nroar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quokkerize/quokkerize.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        audio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('audio')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/quokkerize/quokkerize.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/quokkerize/quokkerize.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\n@Component({\n  selector: 'fc-quokkerize',\n  templateUrl: './quokkerize.component.html',\n  styleUrls: [ './quokkerize.component.scss' ]\n})\nexport class QuokkerizeComponent implements OnInit {\n\n  @ViewChild('audio') private audio: any;  \n  public loaded = true;\n\n  constructor() {    \n  }\n\n  ngOnInit() {\n    \n  }  \n\n  roar() {\n    //TODO: Play a sound\n  } \n}\n\n    \n\n    \n            \n    \n    \n        \n        \n     -->\n\n    \n\n    \n                \n                    ./quokkerize.component.scss\n                \n                div.quokka-container{\n    width: 443px; \n    height: 510px; \n    background-color: Transparent;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n}\n\ndiv.quokka-container > img {\n    width: 443px; \n    height: 510px;\n    margin: 0;\n    padding: 0; \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                 -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'fc-root'},{'name': 'MapComponent', 'selector': 'fc-map'},{'name': 'MapDashboardComponent', 'selector': 'fc-map-dashboard'},{'name': 'MapItemComponent', 'selector': 'fc-map-item'},{'name': 'MapNodeComponent', 'selector': 'fc-map-node'},{'name': 'QuokkerizeComponent', 'selector': 'fc-quokkerize'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuokkerizeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RootMapCollection.html":{"url":"interfaces/RootMapCollection.html","title":"interface - RootMapCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RootMapCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/map-item.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            leftChildren\n                                        \n                                \n                                \n                                        \n                                            rightChildren\n                                        \n                                \n                                \n                                        \n                                            rootItem\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        leftChildren\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        leftChildren:         MapCollection[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapCollection[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightChildren\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rightChildren:         MapCollection[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapCollection[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rootItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rootItem:         MapItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MapItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MapItem {\n    id: string;\n    title: string;\n}\n\nexport interface MapCollection {\n    item: MapItem;\n    children: MapCollection[];\n}\n\nexport interface RootMapCollection {\n    rootItem: MapItem;\n    leftChildren: MapCollection[];\n    rightChildren: MapCollection[];\n}\n\nexport interface MapNode {\n    id: string;\n    title: string;\n    isRoot: boolean;\n    css?: string;\n    parent?: MapNode;\n    children: MapNode[];\n    position: 'left' | 'right' | 'center';\n    isFirstLevel: boolean;\n    isNew: boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/cdk : ^11.2.13\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/material : ^11.2.13\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            @angular/service-worker : ~11.0.0\n        \n            @fortawesome/angular-fontawesome : ^0.8.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.32\n        \n            @fortawesome/free-solid-svg-icons : ^5.15.1\n        \n            @types/uuid : ^8.3.1\n        \n            html-to-image : ^1.7.0\n        \n            jsplumb : ^2.15.6\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            downloadURI   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        downloadURI\n                        \n                    \n                \n            \n            \n                \ndownloadURI(uri, name)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uri\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFcMindmap\nThis project was generated with Angular CLI version 11.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nMapDashboardComponent\n\nMapDashboardComponent\n\nAppModule -->\n\nMapDashboardComponent->AppModule\n\n\n\n\n\nMapItemComponent\n\nMapItemComponent\n\nAppModule -->\n\nMapItemComponent->AppModule\n\n\n\n\n\nMapNodeComponent\n\nMapNodeComponent\n\nAppModule -->\n\nMapNodeComponent->AppModule\n\n\n\n\n\nQuokkerizeComponent\n\nQuokkerizeComponent\n\nAppModule -->\n\nQuokkerizeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ZoomLevel   (src/.../zoom-level.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/zoom-level.ts\n    \n    \n        \n            \n                \n                    \n                    ZoomLevel\n                \n            \n            \n                \n                        \"zoom0_1\" | \"zoom0_2\" | \"zoom0_4\" | \"zoom0_5\" | \"zoom0_75\" | \"zoom1_0\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            zoomLevels   (src/.../zoom-level.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/models/zoom-level.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        zoomLevels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ZoomLevel[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'zoom0_1',\n    'zoom0_2', \n    'zoom0_4', \n    'zoom0_5', \n    'zoom0_75', \n    'zoom1_0'\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
